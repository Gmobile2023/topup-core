2021-01-08 17:08:16.094 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportBalanceConsumer" (using supplied consumer factory)
2021-01-08 17:08:16.159 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportItemConsumer" (using supplied consumer factory)
2021-01-08 17:08:16.166 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportCardStockConsumer" (using supplied consumer factory)
2021-01-08 17:08:16.167 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.CardStockNotificationConsumer" (using supplied consumer factory)
2021-01-08 17:08:16.168 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.BotSendMessageConsumer" (using supplied consumer factory)
2021-01-08 17:08:16.170 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.AuditLogConsumer" (using supplied consumer factory)
2021-01-08 17:08:16.171 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.TransactionReportConsumer" (using supplied consumer factory)
2021-01-08 17:08:16.344 +07:00 [DBG] [MassTransit.] Starting host: rabbitmq://103.109.43.93/paygate
2021-01-08 17:08:16.398 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 17:08:16.458 +07:00 [DBG] [MassTransit.] Connected: "paygate@103.109.43.93:5672/paygate" (address: "amqp://103.109.43.93:5672", local: 50498)
2021-01-08 17:08:16.495 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-balance, type: fanout, durable"
2021-01-08 17:08:16.496 +07:00 [DBG] [MassTransit.] Declare exchange: "name: card-stock-notification, type: fanout, durable"
2021-01-08 17:08:16.501 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, type: fanout, durable"
2021-01-08 17:08:16.501 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, type: fanout, durable"
2021-01-08 17:08:16.503 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-card-stock, type: fanout, durable"
2021-01-08 17:08:16.505 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, destination: card-stock-notification"
2021-01-08 17:08:16.505 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, destination: report-balance"
2021-01-08 17:08:16.508 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, type: fanout, durable"
2021-01-08 17:08:16.515 +07:00 [DBG] [MassTransit.] Declare exchange: "name: bot-send-message, type: fanout, durable"
2021-01-08 17:08:16.515 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, destination: report-card-stock"
2021-01-08 17:08:16.516 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-balance, durable"
2021-01-08 17:08:16.516 +07:00 [DBG] [MassTransit.] Declare queue: "name: card-stock-notification, durable"
2021-01-08 17:08:17.390 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:SendBotMessage, type: fanout, durable"
2021-01-08 17:08:17.392 +07:00 [DBG] [MassTransit.] Declare exchange: "name: audit-log, type: fanout, durable"
2021-01-08 17:08:17.392 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-card-stock, durable"
2021-01-08 17:08:17.392 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:SendBotMessage, destination: bot-send-message"
2021-01-08 17:08:17.393 +07:00 [DBG] [MassTransit.] Bind queue: "source: card-stock-notification, destination: card-stock-notification"
2021-01-08 17:08:17.393 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-balance, destination: report-balance"
2021-01-08 17:08:18.415 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-item, type: fanout, durable"
2021-01-08 17:08:18.416 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, type: fanout, durable"
2021-01-08 17:08:18.416 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-card-stock, destination: report-card-stock"
2021-01-08 17:08:18.420 +07:00 [DBG] [MassTransit.] Declare queue: "name: bot-send-message, durable"
2021-01-08 17:08:18.423 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:08:18.423 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:08:19.411 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, destination: audit-log"
2021-01-08 17:08:19.412 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, type: fanout, durable"
2021-01-08 17:08:19.412 +07:00 [DBG] [MassTransit.] Bind queue: "source: bot-send-message, destination: bot-send-message"
2021-01-08 17:08:19.413 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:08:19.417 +07:00 [DBG] [MassTransit.] Declare queue: "name: audit-log, durable"
2021-01-08 17:08:19.417 +07:00 [DBG] [MassTransit.] Declare exchange: "name: transaction-report, type: fanout, durable"
2021-01-08 17:08:19.420 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:08:19.420 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, type: fanout, durable"
2021-01-08 17:08:19.421 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, type: fanout, durable"
2021-01-08 17:08:19.421 +07:00 [DBG] [MassTransit.] Bind queue: "source: audit-log, destination: audit-log"
2021-01-08 17:08:19.422 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, type: fanout, durable"
2021-01-08 17:08:19.427 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, destination: transaction-report"
2021-01-08 17:08:19.429 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:08:19.429 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, type: fanout, durable"
2021-01-08 17:08:19.432 +07:00 [DBG] [MassTransit.] Declare queue: "name: transaction-report, durable"
2021-01-08 17:08:19.432 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, destination: report-item"
2021-01-08 17:08:19.433 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/card-stock-notification - "amq.ctag-zn9crsGaVNKOv88k2-wiUw"
2021-01-08 17:08:19.435 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-card-stock - "amq.ctag-0bmEMYPio0ZnluYBKn-MUg"
2021-01-08 17:08:19.435 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-balance - "amq.ctag--ORu8L2QHD01m8TWDRcdlw"
2021-01-08 17:08:19.435 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/bot-send-message - "amq.ctag-cwf9JUWtp5O9T32L4sIevQ"
2021-01-08 17:08:19.440 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/audit-log - "amq.ctag-Jy5e2of4eX8-Jkmus0436g"
2021-01-08 17:08:19.440 +07:00 [DBG] [MassTransit.] Bind queue: "source: transaction-report, destination: transaction-report"
2021-01-08 17:08:19.442 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, destination: report-item"
2021-01-08 17:08:19.444 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:08:19.445 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, destination: report-item"
2021-01-08 17:08:19.449 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, destination: report-item"
2021-01-08 17:08:19.450 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/transaction-report - "amq.ctag-oVjP59x8ihR4IQYub9iB4A"
2021-01-08 17:08:19.452 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-item, durable"
2021-01-08 17:08:19.455 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-item, destination: report-item"
2021-01-08 17:08:19.459 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:08:19.465 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-item - "amq.ctag-7-kJhzvS1QKEEoexIUFBmQ"
2021-01-08 17:08:20.030 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Now listening on: "http://localhost:6780"
2021-01-08 17:08:20.033 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Application started. Press Ctrl+C to shut down.
2021-01-08 17:08:20.035 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Hosting environment: "Development"
2021-01-08 17:08:20.037 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Content root path: "E:\Source\TopupCard\topup_gate_core\HLS.Paygate.Report.Hosting"
2021-01-08 17:08:37.837 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/  
2021-01-08 17:08:37.882 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 44.6435ms 404 
2021-01-08 17:08:39.753 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui  
2021-01-08 17:08:39.772 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 17.1137ms 302 
2021-01-08 17:08:39.775 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/  
2021-01-08 17:08:39.815 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 40.8843ms 200 text/html; charset=utf-8
2021-01-08 17:08:39.823 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/css/typography.css  
2021-01-08 17:08:39.826 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/css/reset.css  
2021-01-08 17:08:39.828 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/css/screen.css  
2021-01-08 17:08:39.831 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/object-assign-pollyfill.js  
2021-01-08 17:08:39.833 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery-1.8.0.min.js  
2021-01-08 17:08:39.836 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery.slideto.min.js  
2021-01-08 17:08:39.852 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 27.3139ms 200 text/css
2021-01-08 17:08:39.854 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 22.375ms 200 text/javascript
2021-01-08 17:08:39.856 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 25.4875ms 200 text/css
2021-01-08 17:08:39.859 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery.ba-bbq.min.js  
2021-01-08 17:08:39.861 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/lodash.min.js  
2021-01-08 17:08:39.864 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 25.4736ms 200 text/javascript
2021-01-08 17:08:39.865 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/handlebars-4.0.5.js  
2021-01-08 17:08:39.867 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/backbone-min.js  
2021-01-08 17:08:39.870 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 26.2723ms 200 text/css
2021-01-08 17:08:39.873 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 9.7846ms 200 text/javascript
2021-01-08 17:08:39.875 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 15.803ms 200 text/javascript
2021-01-08 17:08:39.877 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/swagger-ui.js  
2021-01-08 17:08:39.879 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 6.3305ms 200 text/javascript
2021-01-08 17:08:39.881 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/highlight.9.1.0.pack_extended.js  
2021-01-08 17:08:39.883 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 45.8851ms 200 text/javascript
2021-01-08 17:08:39.884 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/highlight.9.1.0.pack.js  
2021-01-08 17:08:39.886 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jsoneditor.min.js  
2021-01-08 17:08:39.888 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 7.7158ms 200 text/javascript
2021-01-08 17:08:39.890 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 6.5196ms 200 text/javascript
2021-01-08 17:08:39.892 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery.wiggle.min.js  
2021-01-08 17:08:39.894 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/swagger-oauth.js  
2021-01-08 17:08:39.897 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/images/logo_small.png  
2021-01-08 17:08:39.901 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 3.47ms 200 text/javascript
2021-01-08 17:08:39.902 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 24.1633ms 200 text/javascript
2021-01-08 17:08:39.909 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 48.5324ms 200 text/javascript
2021-01-08 17:08:39.910 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 24.3776ms 200 text/javascript
2021-01-08 17:08:39.913 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/marked.js  
2021-01-08 17:08:39.914 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 18.5851ms 200 image/png
2021-01-08 17:08:39.916 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 4.2779ms 200 text/javascript
2021-01-08 17:08:39.930 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 55.3081ms 200 text/javascript
2021-01-08 17:08:40.289 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/sa  
2021-01-08 17:08:40.292 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 2.9326ms 404 
2021-01-08 17:08:42.536 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/css/typography.css  
2021-01-08 17:08:42.542 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/css/screen.css  
2021-01-08 17:08:42.544 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/object-assign-pollyfill.js  
2021-01-08 17:08:42.545 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/css/reset.css  
2021-01-08 17:08:42.547 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery-1.8.0.min.js  
2021-01-08 17:08:42.548 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 3.9698ms 200 text/css
2021-01-08 17:08:42.584 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery.slideto.min.js  
2021-01-08 17:08:42.590 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 12.2712ms 200 text/javascript
2021-01-08 17:08:42.593 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 10.8441ms 200 text/css
2021-01-08 17:08:42.595 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 9.1868ms 200 text/css
2021-01-08 17:08:42.596 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery.wiggle.min.js  
2021-01-08 17:08:42.601 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/backbone-min.js  
2021-01-08 17:08:42.601 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 2.3482ms 200 text/javascript
2021-01-08 17:08:42.605 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 51.7508ms 200 text/javascript
2021-01-08 17:08:42.606 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/handlebars-4.0.5.js  
2021-01-08 17:08:42.608 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/highlight.9.1.0.pack.js  
2021-01-08 17:08:42.609 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 9.5989ms 200 text/javascript
2021-01-08 17:08:42.612 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/swagger-ui.js  
2021-01-08 17:08:42.619 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/highlight.9.1.0.pack_extended.js  
2021-01-08 17:08:42.621 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jquery.ba-bbq.min.js  
2021-01-08 17:08:42.625 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 9.4129ms 200 text/javascript
2021-01-08 17:08:42.627 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 52.1701ms 200 text/javascript
2021-01-08 17:08:42.629 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 29.486ms 200 text/javascript
2021-01-08 17:08:42.634 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/jsoneditor.min.js  
2021-01-08 17:08:42.636 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 15.7997ms 200 text/javascript
2021-01-08 17:08:42.638 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/swagger-oauth.js  
2021-01-08 17:08:42.639 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/lodash.min.js  
2021-01-08 17:08:42.642 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 19.2678ms 200 text/javascript
2021-01-08 17:08:42.645 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 27.2898ms 200 text/javascript
2021-01-08 17:08:42.649 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 7.1099ms 200 text/javascript
2021-01-08 17:08:42.653 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 14.719ms 200 text/javascript
2021-01-08 17:08:42.655 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/lib/marked.js  
2021-01-08 17:08:42.656 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 28.9177ms 200 text/javascript
2021-01-08 17:08:42.658 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 10.6275ms 200 text/javascript
2021-01-08 17:08:42.706 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/images/logo_small.png  
2021-01-08 17:08:42.709 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/css/print.css  
2021-01-08 17:08:42.709 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 2.8623ms 200 image/png
2021-01-08 17:08:42.731 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 22.7394ms 200 text/css
2021-01-08 17:08:42.737 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/openapi  
2021-01-08 17:08:42.954 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 216.0407ms 200 application/json; charset=utf-8
2021-01-08 17:08:54.308 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/api/v1/report/transaction/save-bill/get-bill  
2021-01-08 17:08:54.308 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/swagger-ui/images/throbber.gif  
2021-01-08 17:08:54.311 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 6.6351ms 200 image/gif
2021-01-08 17:08:54.751 +07:00 [INF] [HLS.Paygate.Report.Interface.Services.ReportService.] GetSavePayBillRequest:{}
2021-01-08 17:08:55.037 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 731.3441ms 200 application/json; charset=utf-8
2021-01-08 17:09:04.808 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.GET] Request starting HTTP/1.1 GET http://localhost:6780/api/v1/report/transaction/save-bill/get-bill?AccountCode=NT951709  
2021-01-08 17:09:04.815 +07:00 [INF] [HLS.Paygate.Report.Interface.Services.ReportService.] GetSavePayBillRequest:{"accountCode":"NT951709"}
2021-01-08 17:09:04.891 +07:00 [INF] [Microsoft.AspNetCore.Hosting.Diagnostics.] Request finished in 82.8025ms 200 application/json; charset=utf-8
2021-01-08 17:59:15.872 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportBalanceConsumer" (using supplied consumer factory)
2021-01-08 17:59:15.929 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportItemConsumer" (using supplied consumer factory)
2021-01-08 17:59:15.932 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportCardStockConsumer" (using supplied consumer factory)
2021-01-08 17:59:15.934 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.CardStockNotificationConsumer" (using supplied consumer factory)
2021-01-08 17:59:15.935 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.BotSendMessageConsumer" (using supplied consumer factory)
2021-01-08 17:59:15.936 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.AuditLogConsumer" (using supplied consumer factory)
2021-01-08 17:59:15.938 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.TransactionReportConsumer" (using supplied consumer factory)
2021-01-08 17:59:16.097 +07:00 [DBG] [MassTransit.] Starting host: rabbitmq://103.109.43.93/paygate
2021-01-08 17:59:16.148 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 17:59:16.218 +07:00 [DBG] [MassTransit.] Connected: "paygate@103.109.43.93:5672/paygate" (address: "amqp://103.109.43.93:5672", local: 50958)
2021-01-08 17:59:16.258 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-item, type: fanout, durable"
2021-01-08 17:59:16.258 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-card-stock, type: fanout, durable"
2021-01-08 17:59:16.264 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-balance, type: fanout, durable"
2021-01-08 17:59:16.264 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, type: fanout, durable"
2021-01-08 17:59:16.264 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, type: fanout, durable"
2021-01-08 17:59:16.268 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, type: fanout, durable"
2021-01-08 17:59:16.268 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, type: fanout, durable"
2021-01-08 17:59:16.269 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, destination: report-card-stock"
2021-01-08 17:59:16.270 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, type: fanout, durable"
2021-01-08 17:59:16.270 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, destination: report-balance"
2021-01-08 17:59:16.270 +07:00 [DBG] [MassTransit.] Declare exchange: "name: card-stock-notification, type: fanout, durable"
2021-01-08 17:59:16.274 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, type: fanout, durable"
2021-01-08 17:59:16.274 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, type: fanout, durable"
2021-01-08 17:59:16.275 +07:00 [DBG] [MassTransit.] Declare exchange: "name: bot-send-message, type: fanout, durable"
2021-01-08 17:59:16.276 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, destination: report-item"
2021-01-08 17:59:16.276 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, destination: card-stock-notification"
2021-01-08 17:59:16.277 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-card-stock, durable"
2021-01-08 17:59:16.277 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-balance, durable"
2021-01-08 17:59:17.470 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:SendBotMessage, type: fanout, durable"
2021-01-08 17:59:17.470 +07:00 [DBG] [MassTransit.] Declare exchange: "name: audit-log, type: fanout, durable"
2021-01-08 17:59:17.471 +07:00 [DBG] [MassTransit.] Declare queue: "name: card-stock-notification, durable"
2021-01-08 17:59:17.471 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, destination: report-item"
2021-01-08 17:59:17.471 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-card-stock, destination: report-card-stock"
2021-01-08 17:59:17.471 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-balance, destination: report-balance"
2021-01-08 17:59:18.478 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:SendBotMessage, destination: bot-send-message"
2021-01-08 17:59:18.478 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, type: fanout, durable"
2021-01-08 17:59:18.478 +07:00 [DBG] [MassTransit.] Bind queue: "source: card-stock-notification, destination: card-stock-notification"
2021-01-08 17:59:18.478 +07:00 [DBG] [MassTransit.] Declare exchange: "name: transaction-report, type: fanout, durable"
2021-01-08 17:59:18.481 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, destination: report-item"
2021-01-08 17:59:18.487 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:59:18.487 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:59:19.469 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, destination: audit-log"
2021-01-08 17:59:19.469 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, type: fanout, durable"
2021-01-08 17:59:19.470 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, destination: report-item"
2021-01-08 17:59:19.470 +07:00 [DBG] [MassTransit.] Declare queue: "name: bot-send-message, durable"
2021-01-08 17:59:19.470 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:59:19.472 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, destination: transaction-report"
2021-01-08 17:59:19.473 +07:00 [DBG] [MassTransit.] Bind queue: "source: bot-send-message, destination: bot-send-message"
2021-01-08 17:59:19.473 +07:00 [DBG] [MassTransit.] Declare queue: "name: audit-log, durable"
2021-01-08 17:59:19.474 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-item, durable"
2021-01-08 17:59:19.476 +07:00 [DBG] [MassTransit.] Bind queue: "source: audit-log, destination: audit-log"
2021-01-08 17:59:19.476 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-item, destination: report-item"
2021-01-08 17:59:19.477 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:59:19.477 +07:00 [DBG] [MassTransit.] Declare queue: "name: transaction-report, durable"
2021-01-08 17:59:19.481 +07:00 [DBG] [MassTransit.] Bind queue: "source: transaction-report, destination: transaction-report"
2021-01-08 17:59:19.481 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:59:19.481 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:59:19.486 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 17:59:19.487 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/card-stock-notification - "amq.ctag-5iLMG_cF-jocxU1qt7witg"
2021-01-08 17:59:19.487 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-card-stock - "amq.ctag-cXHOD03QtW5BOqZcvTv0dQ"
2021-01-08 17:59:19.489 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/bot-send-message - "amq.ctag-yhMh7T3ZHL3F16KrNf4vXQ"
2021-01-08 17:59:19.489 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-balance - "amq.ctag-Gygwrm9VVTFWblHwWEc5_A"
2021-01-08 17:59:19.489 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/audit-log - "amq.ctag-r2zdofIg5lvHC3sVmeLaxw"
2021-01-08 17:59:19.489 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-item - "amq.ctag-5cuz-u_eXRD8kt_MXoTu-w"
2021-01-08 17:59:19.495 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/transaction-report - "amq.ctag-x02GHDuAscaojnmE17-k5A"
2021-01-08 17:59:19.863 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Now listening on: "http://localhost:6780"
2021-01-08 17:59:19.865 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Application started. Press Ctrl+C to shut down.
2021-01-08 17:59:19.867 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Hosting environment: "Development"
2021-01-08 17:59:19.869 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Content root path: "E:\Source\TopupCard\topup_gate_core\HLS.Paygate.Report.Hosting"
2021-01-08 18:00:05.468 +07:00 [DBG] [Hangfire.Mongo.Migration.MigrationLock.] Acquired lock for migration
2021-01-08 18:00:05.968 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportBalanceConsumer" (using supplied consumer factory)
2021-01-08 18:00:05.987 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportItemConsumer" (using supplied consumer factory)
2021-01-08 18:00:05.989 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportCardStockConsumer" (using supplied consumer factory)
2021-01-08 18:00:05.990 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.CardStockNotificationConsumer" (using supplied consumer factory)
2021-01-08 18:00:05.991 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.BotSendMessageConsumer" (using supplied consumer factory)
2021-01-08 18:00:05.992 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.AuditLogConsumer" (using supplied consumer factory)
2021-01-08 18:00:05.993 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.TransactionReportConsumer" (using supplied consumer factory)
2021-01-08 18:00:06.143 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:00:06.145 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:00:06.147 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:00:06.148 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:00:06.159 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:f7b882d0 has started in 5.2601 ms
2021-01-08 18:00:06.170 +07:00 [DBG] [MassTransit.] Starting host: rabbitmq://103.109.43.93/paygate
2021-01-08 18:00:06.221 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:00:06.291 +07:00 [DBG] [MassTransit.] Connected: "paygate@103.109.43.93:5672/paygate" (address: "amqp://103.109.43.93:5672", local: 50994)
2021-01-08 18:00:06.318 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d successfully announced in 147.0629 ms
2021-01-08 18:00:06.325 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:a050790a has started in 5.8726 ms
2021-01-08 18:00:06.326 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:00:06.330 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:164726b4 has started in 2.8596 ms
2021-01-08 18:00:06.332 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:413184ac has started in 4.2214 ms
2021-01-08 18:00:06.335 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:3ff20084 has started in 3.6857 ms
2021-01-08 18:00:06.337 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:8cbb15c4 has started in 4.347 ms
2021-01-08 18:00:06.342 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bbdfe305 has started in 7.0897 ms
2021-01-08 18:00:06.345 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:03c1cb11 has started in 10.6366 ms
2021-01-08 18:00:06.350 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1d309a81 has started in 15.1132 ms
2021-01-08 18:00:06.351 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e0653ba1 has started in 15.8456 ms
2021-01-08 18:00:06.353 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:68b160d8 has started in 18.0177 ms
2021-01-08 18:00:06.354 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:40fecadf has started in 19.2199 ms
2021-01-08 18:00:06.356 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:fc1cbcdc has started in 21.1799 ms
2021-01-08 18:00:06.358 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bbed4369 has started in 22.8087 ms
2021-01-08 18:00:06.361 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:56a048d5 has started in 26.3537 ms
2021-01-08 18:00:06.366 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bea7d97e has started in 31.2471 ms
2021-01-08 18:00:06.370 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:37c63428 has started in 35.2578 ms
2021-01-08 18:00:06.372 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a84e1ea3 has started in 37.2066 ms
2021-01-08 18:00:06.378 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f24e4525 has started in 43.5301 ms
2021-01-08 18:00:06.383 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:20f1117f has started in 48.7269 ms
2021-01-08 18:00:06.386 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:19cccc97 has started in 51.8187 ms
2021-01-08 18:00:06.388 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:40a1d8bf has started in 53.7416 ms
2021-01-08 18:00:06.389 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-item, type: fanout, durable"
2021-01-08 18:00:06.389 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-balance, type: fanout, durable"
2021-01-08 18:00:06.389 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-card-stock, type: fanout, durable"
2021-01-08 18:00:06.389 +07:00 [DBG] [MassTransit.] Declare exchange: "name: bot-send-message, type: fanout, durable"
2021-01-08 18:00:06.392 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a50ceb07 has started in 56.7879 ms
2021-01-08 18:00:06.394 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5d336ad1 has started in 59.7451 ms
2021-01-08 18:00:06.395 +07:00 [DBG] [MassTransit.] Declare exchange: "name: card-stock-notification, type: fanout, durable"
2021-01-08 18:00:06.397 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:0d8c0aa3 has started in 62.237 ms
2021-01-08 18:00:06.399 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a679f4f8 has started in 64.5941 ms
2021-01-08 18:00:06.402 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:ff264c53 has started in 4.9836 ms
2021-01-08 18:00:06.406 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d all the dispatchers started
2021-01-08 18:00:06.408 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:3d374286 has started in 7.1988 ms
2021-01-08 18:00:06.495 +07:00 [INF] [Hangfire.Server.ServerWatchdog.] 3 servers were removed due to timeout
2021-01-08 18:00:06.535 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 18 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:00:07.056 +07:00 [DBG] [Hangfire.Server.RecurringJobScheduler.] 3 recurring job(s) processed by scheduler.
2021-01-08 18:00:07.946 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, type: fanout, durable"
2021-01-08 18:00:07.946 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, type: fanout, durable"
2021-01-08 18:00:07.946 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, type: fanout, durable"
2021-01-08 18:00:07.946 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, type: fanout, durable"
2021-01-08 18:00:07.946 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:SendBotMessage, type: fanout, durable"
2021-01-08 18:00:07.966 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.CardStockReportService.] SysCardStockInventoryDay processing
2021-01-08 18:00:08.073 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] CheckLimitMinBalanceAccount request)
2021-01-08 18:00:08.081 +07:00 [INF] [HLS.Paygate.Report.Domain.Connectors.ExternalServiceConnector.] GetAccountRequest request)
2021-01-08 18:00:08.087 +07:00 [DBG] [MassTransit.] Declare exchange: "name: audit-log, type: fanout, durable"
2021-01-08 18:00:08.088 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, type: fanout, durable"
2021-01-08 18:00:08.089 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, destination: card-stock-notification"
2021-01-08 18:00:08.089 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, destination: report-balance"
2021-01-08 18:00:08.089 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, destination: report-card-stock"
2021-01-08 18:00:08.089 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:SendBotMessage, destination: bot-send-message"
2021-01-08 18:00:08.939 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, type: fanout, durable"
2021-01-08 18:00:08.939 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, type: fanout, durable"
2021-01-08 18:00:08.941 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-card-stock, durable"
2021-01-08 18:00:08.941 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-balance, durable"
2021-01-08 18:00:08.941 +07:00 [DBG] [MassTransit.] Declare queue: "name: bot-send-message, durable"
2021-01-08 18:00:08.941 +07:00 [DBG] [MassTransit.] Declare queue: "name: card-stock-notification, durable"
2021-01-08 18:00:08.988 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] CheckBalance: MASTER return: {"result":1759328847.00,"success":true,"error":{"code":0}}
2021-01-08 18:00:09.129 +07:00 [ERR] [HLS.Paygate.Report.Domain.Services.CardStockReportService.] CardStockGetListRequest error: 404 Not Found
Code: Not Found, Message: 

2021-01-08 18:00:09.132 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.CardStockReportService.] CardStockGetListRequest return: 00-0
2021-01-08 18:00:09.139 +07:00 [INF] [HLS.Paygate.Report.Domain.Connectors.ExternalServiceConnector.] GetAccountRequest return: ["","MASTER","CONTROL","NT951709","NT968811","A000000000003","PAYMENT","NT937204","NT914287","A000000000140","NT999623","A000000000088","NV000000000016","NT934662","n3t3h","NT978005","NT981892","A000000000019","NT94185421","NT91355625","NT913500","NT92257531","NT98548922","NT96946432","NT96944633","NT95294329","NV000000000015","NT95433728","NT99922327","NT97033217","NT919374","NT940154","NT955697","NT980466","NT94169840","NT960189","NT937429","NT986723","NT92672","NT99633645","NT989731","NT921956","NT921195","NT950631","NT967337","NT95402951","NT928139","NT962279","NT99822","NT959072","NT954058","NT960106","NT913868","NT912307","NT939514","NT933657","NT944539","A000000000065","NT950332","NT923183","NT99710","NT951140","NT963949","NT954007","NT96662","NT938404","NT912237247","NT910552","NT958461","0912237247","123","NT94680","NT974220","string","NT91161","NT92261","Nt91161","NT91611","NT949504","NT934879","NT964914","NT951708","NT97239710633","NT981958","A000000010635","A000000010653","A000000010669","ABC","A000000010666","NT937174","A000000010676","A000000010672","A000000010681","NT993585","NT92995410687","NT98800610688","A000000010689","NT93546","NT936025","NT945608","NT938829","NT911172","NT995632","NT939016","NT938252","NT929182","SL169410730","NT992406","S7990010758","NT910354","NT94636110768","NT96968","NT98711310774","NT96405110773","SL8138310736","SL9655910778","NT92126410772","NT926216","NT980996","NT924144","NT965751","NT949060","NT96559710794","NT927104","NT91462910797","SL9113510798","NT920399","NT931702","S5051210806","SL1731810805","SL6812910803","S9496410810","NT9139910812","S8399010804","S9551510785","NT99748","NT99032310787","NT965475","NT978258","S8659910790","SL2054810788","NT982019","S6727410797","NT92601","S2932310791","SL7442810789","NT91052","NT94748138","S4122010792","NT994158","NT920888","NT989345","NT940999","NT953128","S3499910806","NT910885","NT944205","NT920664","NT948630","NT988393","S7003510817","SL1986110816","S1982710818","SL3393010796","NT941141","NT965343","S3062310821","NT963614","NT977503","NT936070","NT92268610836","NT974080","NT949161","NT971810","NT991472","NT911328","NT922872","NT950599","NT953903","A000000010846","NT956003","NT933984","NT974571","NT936712","NT985605","NT995068","NT982904","NT970541","NT932913","NT914237","NT913898","NT924053","NT961330","NT938347","NT924964","NT984300","NT993399","NT961439","NT938636","NT98482310890","NT955057","NT960743","S8784810895","NT953039","NT918342","NT968996","NT972589","NT919462","NT95777910897","NT939165","NT942501","NT932647","NT914479","NT95797010905","NT968940","NT913024","NT952030","NT912034","NT953017","NT910430","NT992811","NT939367","NT961666","NT914479-01","NT968410","NT965286","NT981278","NT987028","NT925442","NT988507","NT925442_01","NT967985","NT914101","COMMISSION","NT946935","NT929813","NT992965","NT991063","NT943552","NT994482","NT961924","NT968749","NT940475","NT983446","NT970959","NT982965","A000000010974","NT982432","A000000010977","NT935280","A000000010983","NT988738"]
2021-01-08 18:00:09.142 +07:00 [INF] [HLS.Paygate.Report.Domain.Connectors.ExternalServiceConnector.] GetAccountRequest request)
2021-01-08 18:00:09.149 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] CheckBalance: A000000000088 return: {"result":0,"success":true,"error":{"code":0}}
2021-01-08 18:00:09.153 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, type: fanout, durable"
2021-01-08 18:00:09.153 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, destination: audit-log"
2021-01-08 18:00:09.155 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-card-stock, destination: report-card-stock"
2021-01-08 18:00:09.155 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-balance, destination: report-balance"
2021-01-08 18:00:09.155 +07:00 [DBG] [MassTransit.] Bind queue: "source: card-stock-notification, destination: card-stock-notification"
2021-01-08 18:00:09.155 +07:00 [DBG] [MassTransit.] Bind queue: "source: bot-send-message, destination: bot-send-message"
2021-01-08 18:00:09.660 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SendEmailNotificationMinBalanceAccount return:True
2021-01-08 18:00:09.664 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, destination: report-item"
2021-01-08 18:00:09.671 +07:00 [INF] [HLS.Paygate.Report.Domain.Connectors.ExternalServiceConnector.] GetAccountRequest return: ["NT951709","NT910552","NT937429","A000000010672","NT937174","NT937204","NT939514","NT960189","S9709610726","S5821710725","S4462010732","S4562310728","S3022010737","S5862210734","S8299410780","S2797210789","S9403510790","S8399010804","S8493310799","S9496410810","S2153810784","S8659910790","S6727410797","S2932310791","S3499910806","S2782410733","S1982710818","S4122010792","S7003510817","S3062310821","S9676310959","S2770110800"]
2021-01-08 18:00:09.676 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.]  Start Check
2021-01-08 18:00:09.676 +07:00 [DBG] [MassTransit.] Declare queue: "name: audit-log, durable"
2021-01-08 18:00:09.680 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:09.680 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:09.680 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:09.680 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:09.681 +07:00 [DBG] [MassTransit.] Declare exchange: "name: transaction-report, type: fanout, durable"
2021-01-08 18:00:09.682 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, type: fanout, durable"
2021-01-08 18:00:09.740 +07:00 [DBG] [MassTransit.] Bind queue: "source: audit-log, destination: audit-log"
2021-01-08 18:00:09.743 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, destination: transaction-report"
2021-01-08 18:00:09.747 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, destination: report-item"
2021-01-08 18:00:09.747 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:09.750 +07:00 [DBG] [MassTransit.] Declare queue: "name: transaction-report, durable"
2021-01-08 18:00:09.752 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, destination: report-item"
2021-01-08 18:00:09.753 +07:00 [DBG] [MassTransit.] Bind queue: "source: transaction-report, destination: transaction-report"
2021-01-08 18:00:09.756 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, destination: report-item"
2021-01-08 18:00:09.758 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:09.760 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-item, durable"
2021-01-08 18:00:09.763 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.]  khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:09.765 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] MASTER Start Check
2021-01-08 18:00:09.767 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-item, destination: report-item"
2021-01-08 18:00:09.768 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/audit-log - "amq.ctag-oBGTxGPuhKOtXSrTM4dYKQ"
2021-01-08 18:00:09.768 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/bot-send-message - "amq.ctag-8XqvI0hsg0e7b2Wt2DR2xw"
2021-01-08 18:00:09.769 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/card-stock-notification - "amq.ctag-ydCs_kdXY7co7Z_S-Kn7mQ"
2021-01-08 18:00:09.769 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-balance - "amq.ctag-20jb2EG5CcYcrg-HFwdYvQ"
2021-01-08 18:00:09.769 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-card-stock - "amq.ctag-IDvY1Xto7iMAQj1MBnYH0A"
2021-01-08 18:00:09.772 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/transaction-report - "amq.ctag-bDnY3YX8cGYIJFgxxi289A"
2021-01-08 18:00:09.774 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:09.782 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] MASTER khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:09.782 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-item - "amq.ctag-14v99bneoDujalja98g1hQ"
2021-01-08 18:00:09.784 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] CONTROL Start Check
2021-01-08 18:00:09.811 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] CONTROL khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:09.813 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951709 Start Check
2021-01-08 18:00:09.867 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951709 da ton tai ngay 1/8/2021 12:00:00 AM
2021-01-08 18:00:09.869 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968811 Start Check
2021-01-08 18:00:09.978 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968811 Add item : {"accountCode":"NT968811","balanceBefore":900650390.0000,"debit":0,"credite":0,"incDeposit":0,"incTransfer":0,"incRefund":0,"incCorrect":0,"decPayment":0,"decTransfer":0,"decCorrect":0,"balanceAfter":900650390.0000,"modifiedDate":"\/Date(1610103609891+0700)\/","createdDay":"\/Date(1610100009891+0700)\/","accountType":"CUSTOMER","currencyCode":"VND","accountItem":{"userId":14,"fullName":"ĐẠI LÝ ĐOÀN DỰ","userName":"0985566909","mobile":"0985566909","treePath":"NT984840-NT968811","accountType":2,"agentType":1,"agentName":"ĐẠI LÝ","networkLevel":0,"cityId":1,"cityName":"Hà Nội","districtId":19,"districtName":"Huyện Ba Vì","wardId":290,"wardName":"Thị trấn Tây Đằng","idIdentity":"025443075"},"textDay":"20210108","id":"8e3e36bd338c447c91473f0343389f71","addedAtUtc":"\/Date(1610103609891)\/","version":0}
2021-01-08 18:00:09.980 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000003 Start Check
2021-01-08 18:00:09.996 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000003 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:09.998 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] PAYMENT Start Check
2021-01-08 18:00:10.009 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] PAYMENT da ton tai ngay 1/8/2021 12:00:00 AM
2021-01-08 18:00:10.011 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937204 Start Check
2021-01-08 18:00:10.021 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937204 da ton tai ngay 1/8/2021 12:00:00 AM
2021-01-08 18:00:10.023 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914287 Start Check
2021-01-08 18:00:10.108 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914287 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.110 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000140 Start Check
2021-01-08 18:00:10.135 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:00:10.137 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:00:10.139 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:00:10.141 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:00:10.145 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:45fefb19 has started in 3.4184 ms
2021-01-08 18:00:10.147 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:00:10.149 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:00:10.150 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:00:10.152 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:00:10.155 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:d59aff5e has started in 2.4636 ms
2021-01-08 18:00:10.235 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:7120:d0f40c84 successfully announced in 86.4 ms
2021-01-08 18:00:10.238 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:7120:d0f40c84 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:00:10.239 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:33c8ab41 has started in 4.3065 ms
2021-01-08 18:00:10.242 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:c0b6b320 has started in 4.3182 ms
2021-01-08 18:00:10.244 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:7e29f7a7 has started in 4.2543 ms
2021-01-08 18:00:10.246 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:7120:cefb981d successfully announced in 88.4808 ms
2021-01-08 18:00:10.249 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:caed4266 has started in 8.8451 ms
2021-01-08 18:00:10.250 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:d1f985c9 has started in 6.3136 ms
2021-01-08 18:00:10.252 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:7120:cefb981d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:00:10.254 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:71ba2848 has started in 7.2754 ms
2021-01-08 18:00:10.258 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:b17d8139 has started in 5.1872 ms
2021-01-08 18:00:10.260 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:075311c3 has started in 14.3429 ms
2021-01-08 18:00:10.262 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:84cbdb39 has started in 7.2451 ms
2021-01-08 18:00:10.264 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f2097cc0 has started in 18.6032 ms
2021-01-08 18:00:10.267 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e71c01c1 has started in 21.1478 ms
2021-01-08 18:00:10.269 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:ecb089fc has started in 14.3932 ms
2021-01-08 18:00:10.273 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e7acba92 has started in 26.692 ms
2021-01-08 18:00:10.273 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b7ac1f7a has started in 27.0812 ms
2021-01-08 18:00:10.274 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:198f8f2d has started in 28.2884 ms
2021-01-08 18:00:10.277 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:12b23904 has started in 15.2342 ms
2021-01-08 18:00:10.279 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f7b50291 has started in 33.7417 ms
2021-01-08 18:00:10.281 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:9a497da3 has started in 35.4575 ms
2021-01-08 18:00:10.285 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b1c27c1f has started in 38.3136 ms
2021-01-08 18:00:10.287 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d9a919fe has started in 41.0201 ms
2021-01-08 18:00:10.292 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e9b9da55 has started in 45.5565 ms
2021-01-08 18:00:10.294 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:68ab584a has started in 20.2549 ms
2021-01-08 18:00:10.297 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000140 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.299 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1e31b15f has started in 25.5397 ms
2021-01-08 18:00:10.301 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c7f7edb1 has started in 15.5484 ms
2021-01-08 18:00:10.302 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:7377b5c3 has started in 55.7809 ms
2021-01-08 18:00:10.304 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:49420efe has started in 30.564 ms
2021-01-08 18:00:10.307 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:02124b26 has started in 61.2891 ms
2021-01-08 18:00:10.309 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:0410bdc5 has started in 63.2882 ms
2021-01-08 18:00:10.311 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT999623 Start Check
2021-01-08 18:00:10.314 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:cda97308 has started in 68.0725 ms
2021-01-08 18:00:10.318 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f0ad85c6 has started in 71.5525 ms
2021-01-08 18:00:10.320 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:253099e9 has started in 74.6393 ms
2021-01-08 18:00:10.323 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e1049c3f has started in 48.251 ms
2021-01-08 18:00:10.325 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d53cc3b3 has started in 50.7534 ms
2021-01-08 18:00:10.329 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:70a6a54a has started in 82.9105 ms
2021-01-08 18:00:10.332 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e714ed77 has started in 85.9489 ms
2021-01-08 18:00:10.334 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:0b7d7ba0 has started in 60.4904 ms
2021-01-08 18:00:10.337 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3ce48e0e has started in 90.996 ms
2021-01-08 18:00:10.340 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8e9cf4b8 has started in 65.3017 ms
2021-01-08 18:00:10.343 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ba27e317 has started in 68.7571 ms
2021-01-08 18:00:10.345 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c2314756 has started in 70.8357 ms
2021-01-08 18:00:10.345 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:00:10.349 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:11e78e64 has started in 74.0691 ms
2021-01-08 18:00:10.351 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:b8ebb3fe has started in 21.3456 ms
2021-01-08 18:00:10.354 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:701e59be has started in 79.605 ms
2021-01-08 18:00:10.357 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:38cbb71b has started in 83.1277 ms
2021-01-08 18:00:10.360 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:301e5fa1 has started in 85.8831 ms
2021-01-08 18:00:10.363 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:16240465 has started in 16.8064 ms
2021-01-08 18:00:10.365 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:7120:d0f40c84 all the dispatchers started
2021-01-08 18:00:10.367 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:00:10.369 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2114244c has started in 94.8296 ms
2021-01-08 18:00:10.372 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:67c54ffd has started in 97.7207 ms
2021-01-08 18:00:10.375 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:38219632 has started in 100.5759 ms
2021-01-08 18:00:10.377 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:9958ec86 has started in 103.3367 ms
2021-01-08 18:00:10.382 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1318f091 has started in 107.7806 ms
2021-01-08 18:00:10.384 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:04078a03 has started in 109.9235 ms
2021-01-08 18:00:10.387 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:9c0eb2f9 has started in 9.4235 ms
2021-01-08 18:00:10.390 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:7120:cefb981d all the dispatchers started
2021-01-08 18:00:10.393 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:8e9308f7 has started in 9.1324 ms
2021-01-08 18:00:10.522 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT999623 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.525 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000088 Start Check
2021-01-08 18:00:10.542 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000088 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.545 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NV000000000016 Start Check
2021-01-08 18:00:10.562 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NV000000000016 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.565 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT934662 Start Check
2021-01-08 18:00:10.582 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT934662 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.585 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] n3t3h Start Check
2021-01-08 18:00:10.603 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] n3t3h khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.606 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT978005 Start Check
2021-01-08 18:00:10.621 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT978005 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.624 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT981892 Start Check
2021-01-08 18:00:10.699 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT981892 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.702 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000019 Start Check
2021-01-08 18:00:10.728 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000019 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.731 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94185421 Start Check
2021-01-08 18:00:10.756 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94185421 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.759 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91355625 Start Check
2021-01-08 18:00:10.791 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91355625 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.794 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913500 Start Check
2021-01-08 18:00:10.817 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913500 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.819 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92257531 Start Check
2021-01-08 18:00:10.832 +07:00 [FTL] [Microsoft.AspNetCore.Hosting.Diagnostics.] Application startup exception
System.ArgumentException: CRON expression is invalid. Please see the inner exception for details. (Parameter 'cronExpression')
 ---> Cronos.CronFormatException: Minutes: Value must be a number between 1 and 59 (all inclusive).
   at Cronos.CronExpression.ThrowFormatException(CronField field, String format, Object[] args)
   at Cronos.CronExpression.ParseNumber(CronField field, Char*& pointer, Int32 low, Int32 high)
   at Cronos.CronExpression.ParseStep(CronField field, Char*& pointer, Int32 low, Int32 high)
   at Cronos.CronExpression.ParseField(CronField field, Char*& pointer, CronExpressionFlag& flags)
   at Hangfire.RecurringJobEntity.ParseCronExpression(String cronExpression)
   at Hangfire.RecurringJobManager.ValidateCronExpression(String cronExpression)
   --- End of inner exception stack trace ---
   at Hangfire.RecurringJobManager.ValidateCronExpression(String cronExpression)
   at Hangfire.RecurringJobManager.AddOrUpdate(String recurringJobId, Job job, String cronExpression, RecurringJobOptions options)
   at Hangfire.RecurringJobManagerExtensions.AddOrUpdate(IRecurringJobManager manager, String recurringJobId, Job job, String cronExpression, TimeZoneInfo timeZone, String queue)
   at Hangfire.RecurringJob.AddOrUpdate[T](Expression`1 methodCall, String cronExpression, TimeZoneInfo timeZone, String queue)
   at HLS.Paygate.Report.Hosting.Configurations.ConfigureHangfire.Configure(IApplicationBuilder app) in E:\Source\TopupCard\topup_gate_core\HLS.Paygate.Report.Hosting\Configurations\Configure.Hangfire.cs:line 61
   at ServiceStack.ModularStartup.<>c__DisplayClass31_0.<Configure>g__RunConfigure|0(Object instance) in C:\BuildAgent\work\3481147c480f4a2f\src\ServiceStack\ModularStartup.cs:line 205
   at System.Collections.Generic.List`1.ForEach(Action`1 action)
   at ServiceStack.ModularStartup.Configure(IApplicationBuilder app) in C:\BuildAgent\work\3481147c480f4a2f\src\ServiceStack\ModularStartup.cs:line 252
   at ServiceStack.ModularStartupActivator.Configure(IApplicationBuilder app) in C:\BuildAgent\work\3481147c480f4a2f\src\ServiceStack\ModularStartup.cs:line 357
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.AspNetCore.Hosting.ConfigureBuilder.Invoke(Object instance, IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.ConfigureBuilder.<>c__DisplayClass4_0.<Build>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass13_0.<UseStartup>b__2(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2021-01-08 18:00:10.840 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92257531 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.844 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98548922 Start Check
2021-01-08 18:00:10.847 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d caught stopping signal...
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:03c1cb11 stopped in 3.0617 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bea7d97e stopped in 3.1084 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:40a1d8bf stopped in 3.1428 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a50ceb07 stopped in 2.5807 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a679f4f8 stopped in 3.1775 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e0653ba1 stopped in 3.1949 ms
2021-01-08 18:00:10.851 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5d336ad1 stopped in 3.2005 ms
2021-01-08 18:00:10.851 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:fc1cbcdc stopped in 3.2294 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bbdfe305 stopped in 2.5787 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f24e4525 stopped in 3.1139 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:20f1117f stopped in 2.5821 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bbed4369 stopped in 3.1187 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:37c63428 stopped in 3.1407 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1d309a81 stopped in 3.1271 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:0d8c0aa3 stopped in 3.1504 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:40fecadf stopped in 3.1674 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:68b160d8 stopped in 3.1862 ms
2021-01-08 18:00:10.851 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:ff264c53 stopped in 3.2127 ms
2021-01-08 18:00:10.850 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a84e1ea3 stopped in 3.0718 ms
2021-01-08 18:00:10.851 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:3d374286 stopped in 3.2531 ms
2021-01-08 18:00:10.851 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:164726b4 stopped in 3.241 ms
2021-01-08 18:00:10.851 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:413184ac stopped in 3.2341 ms
2021-01-08 18:00:10.853 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d caught stopped signal...
2021-01-08 18:00:10.858 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:3ff20084 stopped in 10.2966 ms
2021-01-08 18:00:10.890 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:56a048d5 stopped in 41.9563 ms
2021-01-08 18:00:10.914 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98548922 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.916 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96946432 Start Check
2021-01-08 18:00:10.941 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96946432 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.943 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96944633 Start Check
2021-01-08 18:00:10.960 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96944633 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.962 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95294329 Start Check
2021-01-08 18:00:10.980 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95294329 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:10.983 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NV000000000015 Start Check
2021-01-08 18:00:11.001 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NV000000000015 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.005 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95433728 Start Check
2021-01-08 18:00:11.029 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95433728 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.032 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99922327 Start Check
2021-01-08 18:00:11.059 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99922327 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.061 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT97033217 Start Check
2021-01-08 18:00:11.085 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT97033217 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.088 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT919374 Start Check
2021-01-08 18:00:11.112 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT919374 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.115 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT940154 Start Check
2021-01-08 18:00:11.148 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT940154 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.151 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT955697 Start Check
2021-01-08 18:00:11.177 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT955697 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.180 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT980466 Start Check
2021-01-08 18:00:11.198 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT980466 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.200 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94169840 Start Check
2021-01-08 18:00:11.218 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94169840 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.221 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960189 Start Check
2021-01-08 18:00:11.245 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960189 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.247 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937429 Start Check
2021-01-08 18:00:11.274 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937429 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.277 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT986723 Start Check
2021-01-08 18:00:11.301 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT986723 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.303 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92672 Start Check
2021-01-08 18:00:11.338 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92672 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.341 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99633645 Start Check
2021-01-08 18:00:11.366 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99633645 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.368 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT989731 Start Check
2021-01-08 18:00:11.403 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT989731 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.406 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT921956 Start Check
2021-01-08 18:00:11.440 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT921956 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.443 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT921195 Start Check
2021-01-08 18:00:11.461 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT921195 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.464 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT950631 Start Check
2021-01-08 18:00:11.480 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT950631 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.483 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT967337 Start Check
2021-01-08 18:00:11.501 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT967337 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.504 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95402951 Start Check
2021-01-08 18:00:11.536 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95402951 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.539 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT928139 Start Check
2021-01-08 18:00:11.563 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT928139 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.565 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT962279 Start Check
2021-01-08 18:00:11.590 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT962279 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.593 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99822 Start Check
2021-01-08 18:00:11.617 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99822 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.619 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT959072 Start Check
2021-01-08 18:00:11.634 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:8cbb15c4 stopped in 786.5843 ms
2021-01-08 18:00:11.642 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT959072 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.644 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT954058 Start Check
2021-01-08 18:00:11.668 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT954058 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.671 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960106 Start Check
2021-01-08 18:00:11.696 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960106 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.698 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913868 Start Check
2021-01-08 18:00:11.716 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913868 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.719 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT912307 Start Check
2021-01-08 18:00:11.736 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT912307 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.739 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939514 Start Check
2021-01-08 18:00:11.756 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939514 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.758 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT933657 Start Check
2021-01-08 18:00:11.774 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT933657 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.777 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT944539 Start Check
2021-01-08 18:00:11.794 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT944539 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.797 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000065 Start Check
2021-01-08 18:00:11.821 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000000065 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.824 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT950332 Start Check
2021-01-08 18:00:11.841 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT950332 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.844 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT923183 Start Check
2021-01-08 18:00:11.862 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT923183 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.865 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99710 Start Check
2021-01-08 18:00:11.891 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99710 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.894 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951140 Start Check
2021-01-08 18:00:11.924 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951140 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.927 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT963949 Start Check
2021-01-08 18:00:11.950 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT963949 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.953 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT954007 Start Check
2021-01-08 18:00:11.979 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT954007 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:11.981 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96662 Start Check
2021-01-08 18:00:12.012 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96662 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.015 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938404 Start Check
2021-01-08 18:00:12.041 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938404 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.044 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT912237247 Start Check
2021-01-08 18:00:12.069 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT912237247 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.071 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910552 Start Check
2021-01-08 18:00:12.094 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910552 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.096 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT958461 Start Check
2021-01-08 18:00:12.110 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT958461 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.114 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] 0912237247 Start Check
2021-01-08 18:00:12.131 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] 0912237247 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.133 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] 123 Start Check
2021-01-08 18:00:12.152 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] 123 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.154 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94680 Start Check
2021-01-08 18:00:12.171 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94680 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.174 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT974220 Start Check
2021-01-08 18:00:12.200 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT974220 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.202 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] string Start Check
2021-01-08 18:00:12.220 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] string khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.222 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91161 Start Check
2021-01-08 18:00:12.243 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91161 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.246 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92261 Start Check
2021-01-08 18:00:12.284 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92261 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.286 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] Nt91161 Start Check
2021-01-08 18:00:12.462 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] Nt91161 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.465 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91611 Start Check
2021-01-08 18:00:12.484 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91611 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.490 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT949504 Start Check
2021-01-08 18:00:12.510 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT949504 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.513 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT934879 Start Check
2021-01-08 18:00:12.536 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT934879 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.538 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT964914 Start Check
2021-01-08 18:00:12.563 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT964914 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.565 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951708 Start Check
2021-01-08 18:00:12.589 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951708 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.592 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT97239710633 Start Check
2021-01-08 18:00:12.616 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT97239710633 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.619 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT981958 Start Check
2021-01-08 18:00:12.642 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT981958 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.644 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010635 Start Check
2021-01-08 18:00:12.670 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010635 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.673 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010653 Start Check
2021-01-08 18:00:12.690 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010653 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.693 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010669 Start Check
2021-01-08 18:00:12.708 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010669 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.711 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] ABC Start Check
2021-01-08 18:00:12.727 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] ABC khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.729 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010666 Start Check
2021-01-08 18:00:12.755 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010666 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.758 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937174 Start Check
2021-01-08 18:00:12.781 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937174 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.784 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010676 Start Check
2021-01-08 18:00:12.806 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010676 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.809 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010672 Start Check
2021-01-08 18:00:12.832 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010672 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.834 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010681 Start Check
2021-01-08 18:00:12.864 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010681 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.866 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT993585 Start Check
2021-01-08 18:00:12.887 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT993585 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.890 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92995410687 Start Check
2021-01-08 18:00:12.908 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92995410687 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.911 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98800610688 Start Check
2021-01-08 18:00:12.929 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98800610688 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.931 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010689 Start Check
2021-01-08 18:00:12.950 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010689 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.952 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT93546 Start Check
2021-01-08 18:00:12.969 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT93546 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.971 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT936025 Start Check
2021-01-08 18:00:12.988 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT936025 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:12.991 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT945608 Start Check
2021-01-08 18:00:13.009 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT945608 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.012 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938829 Start Check
2021-01-08 18:00:13.035 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938829 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.037 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT911172 Start Check
2021-01-08 18:00:13.062 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT911172 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.065 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT995632 Start Check
2021-01-08 18:00:13.101 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT995632 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.105 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939016 Start Check
2021-01-08 18:00:13.129 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939016 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.132 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938252 Start Check
2021-01-08 18:00:13.149 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938252 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.152 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT929182 Start Check
2021-01-08 18:00:13.172 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT929182 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.175 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL169410730 Start Check
2021-01-08 18:00:13.199 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL169410730 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.202 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT992406 Start Check
2021-01-08 18:00:13.221 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT992406 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.224 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S7990010758 Start Check
2021-01-08 18:00:13.241 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S7990010758 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.244 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910354 Start Check
2021-01-08 18:00:13.262 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910354 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.265 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94636110768 Start Check
2021-01-08 18:00:13.283 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94636110768 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.286 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96968 Start Check
2021-01-08 18:00:13.309 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96968 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.311 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98711310774 Start Check
2021-01-08 18:00:13.335 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98711310774 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.338 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96405110773 Start Check
2021-01-08 18:00:13.370 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96405110773 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.373 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL8138310736 Start Check
2021-01-08 18:00:13.398 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL8138310736 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.401 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL9655910778 Start Check
2021-01-08 18:00:13.425 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL9655910778 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.428 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92126410772 Start Check
2021-01-08 18:00:13.452 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92126410772 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.455 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT926216 Start Check
2021-01-08 18:00:13.479 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT926216 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.481 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT980996 Start Check
2021-01-08 18:00:13.500 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT980996 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.503 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT924144 Start Check
2021-01-08 18:00:13.530 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT924144 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.533 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965751 Start Check
2021-01-08 18:00:13.560 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965751 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.563 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT949060 Start Check
2021-01-08 18:00:13.587 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT949060 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.589 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96559710794 Start Check
2021-01-08 18:00:13.615 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT96559710794 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.617 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT927104 Start Check
2021-01-08 18:00:13.637 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT927104 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.639 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91462910797 Start Check
2021-01-08 18:00:13.665 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91462910797 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.667 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL9113510798 Start Check
2021-01-08 18:00:13.694 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL9113510798 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.697 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT920399 Start Check
2021-01-08 18:00:13.718 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT920399 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.720 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT931702 Start Check
2021-01-08 18:00:13.737 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT931702 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.740 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S5051210806 Start Check
2021-01-08 18:00:13.765 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S5051210806 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.768 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL1731810805 Start Check
2021-01-08 18:00:13.794 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL1731810805 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.797 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL6812910803 Start Check
2021-01-08 18:00:13.815 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL6812910803 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.817 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9496410810 Start Check
2021-01-08 18:00:13.836 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9496410810 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.839 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT9139910812 Start Check
2021-01-08 18:00:13.870 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT9139910812 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.874 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8399010804 Start Check
2021-01-08 18:00:13.892 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8399010804 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.895 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9551510785 Start Check
2021-01-08 18:00:13.913 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9551510785 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.915 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99748 Start Check
2021-01-08 18:00:13.933 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99748 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.935 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99032310787 Start Check
2021-01-08 18:00:13.952 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT99032310787 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.955 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965475 Start Check
2021-01-08 18:00:13.981 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965475 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:13.984 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT978258 Start Check
2021-01-08 18:00:14.008 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT978258 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.010 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8659910790 Start Check
2021-01-08 18:00:14.034 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8659910790 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.036 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL2054810788 Start Check
2021-01-08 18:00:14.070 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL2054810788 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.072 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982019 Start Check
2021-01-08 18:00:14.098 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982019 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.100 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S6727410797 Start Check
2021-01-08 18:00:14.124 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S6727410797 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.126 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92601 Start Check
2021-01-08 18:00:14.162 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92601 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.164 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2932310791 Start Check
2021-01-08 18:00:14.189 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2932310791 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.192 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL7442810789 Start Check
2021-01-08 18:00:14.217 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL7442810789 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.219 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91052 Start Check
2021-01-08 18:00:14.251 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT91052 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.253 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94748138 Start Check
2021-01-08 18:00:14.284 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT94748138 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.287 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4122010792 Start Check
2021-01-08 18:00:14.322 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4122010792 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.325 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT994158 Start Check
2021-01-08 18:00:14.352 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT994158 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.355 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT920888 Start Check
2021-01-08 18:00:14.384 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT920888 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.387 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT989345 Start Check
2021-01-08 18:00:14.417 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT989345 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.419 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT940999 Start Check
2021-01-08 18:00:14.454 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT940999 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.457 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953128 Start Check
2021-01-08 18:00:14.474 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953128 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.477 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3499910806 Start Check
2021-01-08 18:00:14.495 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3499910806 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.498 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910885 Start Check
2021-01-08 18:00:14.536 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910885 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.539 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT944205 Start Check
2021-01-08 18:00:14.564 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT944205 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.566 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT920664 Start Check
2021-01-08 18:00:14.599 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT920664 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.602 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT948630 Start Check
2021-01-08 18:00:14.627 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT948630 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.630 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT988393 Start Check
2021-01-08 18:00:14.653 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT988393 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.656 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S7003510817 Start Check
2021-01-08 18:00:14.686 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S7003510817 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.689 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL1986110816 Start Check
2021-01-08 18:00:14.708 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL1986110816 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.711 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S1982710818 Start Check
2021-01-08 18:00:14.728 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S1982710818 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.731 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL3393010796 Start Check
2021-01-08 18:00:14.753 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] SL3393010796 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.755 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT941141 Start Check
2021-01-08 18:00:14.784 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT941141 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.786 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965343 Start Check
2021-01-08 18:00:14.811 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965343 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.813 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3062310821 Start Check
2021-01-08 18:00:14.838 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3062310821 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.841 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT963614 Start Check
2021-01-08 18:00:14.874 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT963614 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.877 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT977503 Start Check
2021-01-08 18:00:14.900 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT977503 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.903 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT936070 Start Check
2021-01-08 18:00:14.934 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT936070 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.936 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92268610836 Start Check
2021-01-08 18:00:14.960 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT92268610836 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.963 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT974080 Start Check
2021-01-08 18:00:14.988 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT974080 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:14.991 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT949161 Start Check
2021-01-08 18:00:15.013 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT949161 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.016 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT971810 Start Check
2021-01-08 18:00:15.034 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT971810 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.036 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT991472 Start Check
2021-01-08 18:00:15.054 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT991472 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.056 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT911328 Start Check
2021-01-08 18:00:15.074 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT911328 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.076 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT922872 Start Check
2021-01-08 18:00:15.095 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT922872 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.098 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT950599 Start Check
2021-01-08 18:00:15.126 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT950599 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.128 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953903 Start Check
2021-01-08 18:00:15.155 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953903 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.157 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010846 Start Check
2021-01-08 18:00:15.181 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010846 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.184 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT956003 Start Check
2021-01-08 18:00:15.209 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT956003 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.211 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT933984 Start Check
2021-01-08 18:00:15.236 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT933984 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.239 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT974571 Start Check
2021-01-08 18:00:15.273 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT974571 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.276 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT936712 Start Check
2021-01-08 18:00:15.306 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT936712 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.309 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT985605 Start Check
2021-01-08 18:00:15.341 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT985605 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.345 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT995068 Start Check
2021-01-08 18:00:15.368 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT995068 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.372 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982904 Start Check
2021-01-08 18:00:15.397 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982904 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.400 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT970541 Start Check
2021-01-08 18:00:15.420 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT970541 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.422 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT932913 Start Check
2021-01-08 18:00:15.453 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT932913 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.456 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914237 Start Check
2021-01-08 18:00:15.475 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914237 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.478 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913898 Start Check
2021-01-08 18:00:15.502 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913898 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.505 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT924053 Start Check
2021-01-08 18:00:15.535 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT924053 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.538 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961330 Start Check
2021-01-08 18:00:15.562 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961330 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.565 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938347 Start Check
2021-01-08 18:00:15.589 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938347 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.591 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT924964 Start Check
2021-01-08 18:00:15.616 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT924964 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.618 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT984300 Start Check
2021-01-08 18:00:15.645 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT984300 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.648 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT993399 Start Check
2021-01-08 18:00:15.672 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT993399 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.675 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961439 Start Check
2021-01-08 18:00:15.693 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961439 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.695 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938636 Start Check
2021-01-08 18:00:15.713 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT938636 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.716 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98482310890 Start Check
2021-01-08 18:00:15.735 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT98482310890 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.737 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT955057 Start Check
2021-01-08 18:00:15.770 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT955057 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.772 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960743 Start Check
2021-01-08 18:00:15.807 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960743 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.810 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8784810895 Start Check
2021-01-08 18:00:15.834 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8784810895 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.836 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953039 Start Check
2021-01-08 18:00:15.866 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953039 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.869 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT918342 Start Check
2021-01-08 18:00:15.904 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT918342 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.907 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968996 Start Check
2021-01-08 18:00:15.930 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968996 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.933 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT972589 Start Check
2021-01-08 18:00:15.951 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT972589 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.954 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT919462 Start Check
2021-01-08 18:00:15.969 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT919462 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.972 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95777910897 Start Check
2021-01-08 18:00:15.989 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95777910897 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:15.992 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939165 Start Check
2021-01-08 18:00:16.015 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939165 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.018 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT942501 Start Check
2021-01-08 18:00:16.042 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT942501 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.046 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT932647 Start Check
2021-01-08 18:00:16.069 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT932647 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.072 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914479 Start Check
2021-01-08 18:00:16.097 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914479 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.100 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95797010905 Start Check
2021-01-08 18:00:16.125 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT95797010905 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.127 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968940 Start Check
2021-01-08 18:00:16.151 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968940 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.154 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913024 Start Check
2021-01-08 18:00:16.191 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT913024 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.194 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT952030 Start Check
2021-01-08 18:00:16.217 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT952030 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.219 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT912034 Start Check
2021-01-08 18:00:16.244 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT912034 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.246 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953017 Start Check
2021-01-08 18:00:16.264 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT953017 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.266 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910430 Start Check
2021-01-08 18:00:16.284 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910430 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.286 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT992811 Start Check
2021-01-08 18:00:16.304 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT992811 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.307 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939367 Start Check
2021-01-08 18:00:16.333 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939367 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.336 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961666 Start Check
2021-01-08 18:00:16.353 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961666 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.356 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914479-01 Start Check
2021-01-08 18:00:16.373 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914479-01 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.375 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968410 Start Check
2021-01-08 18:00:16.396 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968410 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.398 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965286 Start Check
2021-01-08 18:00:16.417 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT965286 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.420 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT981278 Start Check
2021-01-08 18:00:16.445 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT981278 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.448 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT987028 Start Check
2021-01-08 18:00:16.473 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT987028 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.475 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT925442 Start Check
2021-01-08 18:00:16.504 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT925442 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.507 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT988507 Start Check
2021-01-08 18:00:16.531 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT988507 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.533 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT925442_01 Start Check
2021-01-08 18:00:16.559 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT925442_01 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.562 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT967985 Start Check
2021-01-08 18:00:16.593 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT967985 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.596 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914101 Start Check
2021-01-08 18:00:16.626 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT914101 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.628 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] COMMISSION Start Check
2021-01-08 18:00:16.651 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] COMMISSION khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.654 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT946935 Start Check
2021-01-08 18:00:16.675 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT946935 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.678 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT929813 Start Check
2021-01-08 18:00:16.696 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT929813 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.699 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT992965 Start Check
2021-01-08 18:00:16.716 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT992965 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.719 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT991063 Start Check
2021-01-08 18:00:16.738 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT991063 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.740 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT943552 Start Check
2021-01-08 18:00:16.759 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT943552 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.761 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT994482 Start Check
2021-01-08 18:00:16.779 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT994482 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.782 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961924 Start Check
2021-01-08 18:00:16.801 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT961924 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.803 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968749 Start Check
2021-01-08 18:00:16.822 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT968749 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.825 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT940475 Start Check
2021-01-08 18:00:16.845 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT940475 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.847 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT983446 Start Check
2021-01-08 18:00:16.865 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT983446 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.867 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT970959 Start Check
2021-01-08 18:00:16.885 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT970959 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.888 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982965 Start Check
2021-01-08 18:00:16.912 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982965 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.914 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010974 Start Check
2021-01-08 18:00:16.934 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010974 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.937 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982432 Start Check
2021-01-08 18:00:16.954 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT982432 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.956 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010977 Start Check
2021-01-08 18:00:16.976 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010977 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:16.979 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT935280 Start Check
2021-01-08 18:00:17.002 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT935280 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.005 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010983 Start Check
2021-01-08 18:00:17.025 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010983 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.027 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT988738 Start Check
2021-01-08 18:00:17.049 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT988738 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.051 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951709 Start Check
2021-01-08 18:00:17.077 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT951709 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.079 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910552 Start Check
2021-01-08 18:00:17.103 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT910552 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.106 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937429 Start Check
2021-01-08 18:00:17.130 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937429 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.133 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010672 Start Check
2021-01-08 18:00:17.169 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] A000000010672 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.173 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937174 Start Check
2021-01-08 18:00:17.197 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937174 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.200 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937204 Start Check
2021-01-08 18:00:17.234 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT937204 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.237 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939514 Start Check
2021-01-08 18:00:17.259 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT939514 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.262 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960189 Start Check
2021-01-08 18:00:17.289 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] NT960189 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.292 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9709610726 Start Check
2021-01-08 18:00:17.319 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9709610726 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.321 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S5821710725 Start Check
2021-01-08 18:00:17.353 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S5821710725 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.356 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4462010732 Start Check
2021-01-08 18:00:17.381 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4462010732 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.385 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4562310728 Start Check
2021-01-08 18:00:17.418 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4562310728 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.421 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3022010737 Start Check
2021-01-08 18:00:17.446 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3022010737 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.449 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S5862210734 Start Check
2021-01-08 18:00:17.473 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S5862210734 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.475 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8299410780 Start Check
2021-01-08 18:00:17.501 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8299410780 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.504 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2797210789 Start Check
2021-01-08 18:00:17.522 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2797210789 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.525 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9403510790 Start Check
2021-01-08 18:00:17.548 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9403510790 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.550 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8399010804 Start Check
2021-01-08 18:00:17.569 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8399010804 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.572 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8493310799 Start Check
2021-01-08 18:00:17.596 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8493310799 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.598 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9496410810 Start Check
2021-01-08 18:00:17.621 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9496410810 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.623 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2153810784 Start Check
2021-01-08 18:00:17.647 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2153810784 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.650 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8659910790 Start Check
2021-01-08 18:00:17.673 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S8659910790 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.675 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S6727410797 Start Check
2021-01-08 18:00:17.692 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S6727410797 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.695 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2932310791 Start Check
2021-01-08 18:00:17.712 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2932310791 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.714 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3499910806 Start Check
2021-01-08 18:00:17.731 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3499910806 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.733 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2782410733 Start Check
2021-01-08 18:00:17.752 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2782410733 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.755 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S1982710818 Start Check
2021-01-08 18:00:17.779 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S1982710818 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.781 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4122010792 Start Check
2021-01-08 18:00:17.806 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S4122010792 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.809 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S7003510817 Start Check
2021-01-08 18:00:17.834 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S7003510817 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.836 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3062310821 Start Check
2021-01-08 18:00:17.870 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S3062310821 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.873 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9676310959 Start Check
2021-01-08 18:00:17.898 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S9676310959 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:17.900 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2770110800 Start Check
2021-01-08 18:00:17.937 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.BalanceReportService.] S2770110800 khong co du lieu ngay: 1/7/2021 12:00:00 AM
2021-01-08 18:00:18.014 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:19cccc97 stopped in 7166.4511 ms
2021-01-08 18:00:18.022 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d All dispatchers stopped
2021-01-08 18:00:18.023 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:a050790a stopped in 7175.2696 ms
2021-01-08 18:00:18.036 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d successfully reported itself as stopped in 6.5784 ms
2021-01-08 18:00:18.038 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:7120:c0d8ae8d has been stopped in total 7188.2861 ms
2021-01-08 18:00:18.038 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:f7b882d0 stopped in 7189.8761 ms
2021-01-08 18:00:54.834 +07:00 [DBG] [Hangfire.Mongo.Migration.MigrationLock.] Acquired lock for migration
2021-01-08 18:00:55.076 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportBalanceConsumer" (using supplied consumer factory)
2021-01-08 18:00:55.094 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportItemConsumer" (using supplied consumer factory)
2021-01-08 18:00:55.096 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportCardStockConsumer" (using supplied consumer factory)
2021-01-08 18:00:55.097 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.CardStockNotificationConsumer" (using supplied consumer factory)
2021-01-08 18:00:55.098 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.BotSendMessageConsumer" (using supplied consumer factory)
2021-01-08 18:00:55.100 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.AuditLogConsumer" (using supplied consumer factory)
2021-01-08 18:00:55.101 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.TransactionReportConsumer" (using supplied consumer factory)
2021-01-08 18:00:55.245 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:00:55.247 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:00:55.250 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:00:55.252 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:00:55.262 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:22554488 has started in 4.9188 ms
2021-01-08 18:00:55.272 +07:00 [DBG] [MassTransit.] Starting host: rabbitmq://103.109.43.93/paygate
2021-01-08 18:00:55.297 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:16440:ae0fd389 successfully announced in 24.5837 ms
2021-01-08 18:00:55.300 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:61dc25a0 has started in 2.8595 ms
2021-01-08 18:00:55.302 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:16440:ae0fd389 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:00:55.305 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:eed9a308 has started in 3.109 ms
2021-01-08 18:00:55.306 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:8455a97b has started in 3.3638 ms
2021-01-08 18:00:55.308 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:ebc56d3e has started in 3.4596 ms
2021-01-08 18:00:55.309 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:e3889e23 has started in 3.196 ms
2021-01-08 18:00:55.312 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a1d4fd5d has started in 4.4819 ms
2021-01-08 18:00:55.313 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:23e8764f has started in 5.288 ms
2021-01-08 18:00:55.317 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b827c3df has started in 7.7676 ms
2021-01-08 18:00:55.317 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4a97006a has started in 9.7959 ms
2021-01-08 18:00:55.321 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a46f5dbc has started in 13.4156 ms
2021-01-08 18:00:55.322 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:626e402b has started in 14.3793 ms
2021-01-08 18:00:55.323 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e722fabd has started in 15.9469 ms
2021-01-08 18:00:55.326 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ca46ce48 has started in 18.1804 ms
2021-01-08 18:00:55.328 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:773462ab has started in 20.2116 ms
2021-01-08 18:00:55.330 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:95847ef8 has started in 22.7602 ms
2021-01-08 18:00:55.331 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bc450127 has started in 23.741 ms
2021-01-08 18:00:55.333 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a777bf77 has started in 25.6125 ms
2021-01-08 18:00:55.336 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ec4ae603 has started in 28.1756 ms
2021-01-08 18:00:55.338 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:08b25b48 has started in 30.1694 ms
2021-01-08 18:00:55.340 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f62a8fce has started in 32.0782 ms
2021-01-08 18:00:55.342 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:dae648d4 has started in 34.2604 ms
2021-01-08 18:00:55.344 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c9fc8fc5 has started in 36.4612 ms
2021-01-08 18:00:55.347 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:406d0e3b has started in 38.9847 ms
2021-01-08 18:00:55.349 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:fd3725cd has started in 41.8482 ms
2021-01-08 18:00:55.353 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2d485ff3 has started in 45.1144 ms
2021-01-08 18:00:55.357 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:12fa8b0b has started in 7.1339 ms
2021-01-08 18:00:55.359 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:16440:ae0fd389 all the dispatchers started
2021-01-08 18:00:55.361 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:c6dacd47 has started in 8.0614 ms
2021-01-08 18:00:55.375 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:00:55.391 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:00:55.433 +07:00 [DBG] [MassTransit.] Connected: "paygate@103.109.43.93:5672/paygate" (address: "amqp://103.109.43.93:5672", local: 51086)
2021-01-08 18:00:55.461 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-item, type: fanout, durable"
2021-01-08 18:00:55.461 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-card-stock, type: fanout, durable"
2021-01-08 18:00:55.467 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, type: fanout, durable"
2021-01-08 18:00:55.467 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, type: fanout, durable"
2021-01-08 18:00:55.470 +07:00 [DBG] [MassTransit.] Declare exchange: "name: card-stock-notification, type: fanout, durable"
2021-01-08 18:00:55.470 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, type: fanout, durable"
2021-01-08 18:00:55.474 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, destination: report-card-stock"
2021-01-08 18:00:55.475 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, type: fanout, durable"
2021-01-08 18:00:55.475 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, type: fanout, durable"
2021-01-08 18:00:55.479 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, type: fanout, durable"
2021-01-08 18:00:55.479 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-balance, type: fanout, durable"
2021-01-08 18:00:55.479 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, destination: card-stock-notification"
2021-01-08 18:00:55.484 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, type: fanout, durable"
2021-01-08 18:00:55.484 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, destination: report-item"
2021-01-08 18:00:55.485 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-card-stock, durable"
2021-01-08 18:00:55.485 +07:00 [DBG] [MassTransit.] Declare queue: "name: card-stock-notification, durable"
2021-01-08 18:00:55.486 +07:00 [DBG] [MassTransit.] Declare exchange: "name: audit-log, type: fanout, durable"
2021-01-08 18:00:55.487 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, destination: report-balance"
2021-01-08 18:00:55.489 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, destination: report-item"
2021-01-08 18:00:57.157 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, type: fanout, durable"
2021-01-08 18:00:57.158 +07:00 [DBG] [MassTransit.] Declare exchange: "name: bot-send-message, type: fanout, durable"
2021-01-08 18:00:57.159 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-balance, durable"
2021-01-08 18:00:57.159 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, destination: report-item"
2021-01-08 18:00:57.160 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, destination: audit-log"
2021-01-08 18:00:57.160 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-card-stock, destination: report-card-stock"
2021-01-08 18:00:57.160 +07:00 [DBG] [MassTransit.] Bind queue: "source: card-stock-notification, destination: card-stock-notification"
2021-01-08 18:00:58.147 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:SendBotMessage, type: fanout, durable"
2021-01-08 18:00:58.148 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-balance, destination: report-balance"
2021-01-08 18:00:58.149 +07:00 [DBG] [MassTransit.] Declare queue: "name: audit-log, durable"
2021-01-08 18:00:58.149 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, destination: report-item"
2021-01-08 18:00:58.151 +07:00 [DBG] [MassTransit.] Declare exchange: "name: transaction-report, type: fanout, durable"
2021-01-08 18:00:58.153 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:SendBotMessage, destination: bot-send-message"
2021-01-08 18:00:58.153 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:58.153 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:58.153 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:58.153 +07:00 [DBG] [MassTransit.] Bind queue: "source: audit-log, destination: audit-log"
2021-01-08 18:00:58.154 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-item, durable"
2021-01-08 18:00:59.161 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, type: fanout, durable"
2021-01-08 18:00:59.161 +07:00 [DBG] [MassTransit.] Declare queue: "name: bot-send-message, durable"
2021-01-08 18:00:59.161 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:59.161 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-item, destination: report-item"
2021-01-08 18:00:59.164 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, destination: transaction-report"
2021-01-08 18:00:59.164 +07:00 [DBG] [MassTransit.] Bind queue: "source: bot-send-message, destination: bot-send-message"
2021-01-08 18:00:59.165 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:59.169 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:59.169 +07:00 [DBG] [MassTransit.] Declare queue: "name: transaction-report, durable"
2021-01-08 18:00:59.173 +07:00 [DBG] [MassTransit.] Bind queue: "source: transaction-report, destination: transaction-report"
2021-01-08 18:00:59.177 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:00:59.181 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-item - "amq.ctag-5i14OfJx-pPX4C5vHCt_-g"
2021-01-08 18:00:59.181 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/bot-send-message - "amq.ctag-hST_geFDQgD7YWzEtHpkyw"
2021-01-08 18:00:59.183 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/audit-log - "amq.ctag-xcGF_cs6ZkCLZxNUtlw9YQ"
2021-01-08 18:00:59.183 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-card-stock - "amq.ctag-rrRMquyU6MnD4w1btdbFtg"
2021-01-08 18:00:59.183 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/card-stock-notification - "amq.ctag-JSzJ1ZFeAcn6rQssHTQndw"
2021-01-08 18:00:59.183 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-balance - "amq.ctag-fpfQlD_YQXsb0Cy4_Luf3A"
2021-01-08 18:00:59.187 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/transaction-report - "amq.ctag-Kkfs9FoakK8woZkZN2X_Og"
2021-01-08 18:00:59.512 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:00:59.514 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:00:59.516 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:00:59.518 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:00:59.520 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:c08599e5 has started in 2.2268 ms
2021-01-08 18:00:59.523 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:00:59.525 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:00:59.526 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:00:59.528 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:00:59.531 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:75b4f98f has started in 2.9983 ms
2021-01-08 18:00:59.532 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:16440:3a86503c successfully announced in 8.9136 ms
2021-01-08 18:00:59.535 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:16440:3a86503c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:00:59.536 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:df44d019 has started in 3.9904 ms
2021-01-08 18:00:59.540 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:93916880 has started in 4.5346 ms
2021-01-08 18:00:59.542 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:16440:fa83d283 successfully announced in 7.0913 ms
2021-01-08 18:00:59.543 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:32434fa1 has started in 6.4357 ms
2021-01-08 18:00:59.546 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:16440:fa83d283 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:00:59.548 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:925e3277 has started in 8.469 ms
2021-01-08 18:00:59.550 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:1566afe3 has started in 7.5537 ms
2021-01-08 18:00:59.551 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:0be89211 has started in 7.9454 ms
2021-01-08 18:00:59.554 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:40aeaac0 has started in 8.2883 ms
2021-01-08 18:00:59.556 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:242582cf has started in 5.2091 ms
2021-01-08 18:00:59.557 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:00:59.558 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bd8cb663 has started in 10.9728 ms
2021-01-08 18:00:59.561 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3cf64d0b has started in 13.9098 ms
2021-01-08 18:00:59.563 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:dd7a4ed8 has started in 11.1027 ms
2021-01-08 18:00:59.566 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:8cd2e4fe has started in 6.766 ms
2021-01-08 18:00:59.568 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d532a70b has started in 20.7282 ms
2021-01-08 18:00:59.570 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3edc54bc has started in 22.3582 ms
2021-01-08 18:00:59.572 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:00:59.573 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c9d843a5 has started in 25.8855 ms
2021-01-08 18:00:59.575 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:df1e33a8 has started in 12.3121 ms
2021-01-08 18:00:59.577 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:564a3183 has started in 14.4837 ms
2021-01-08 18:00:59.579 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4f2800a0 has started in 16.2676 ms
2021-01-08 18:00:59.582 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:578ac9cd has started in 19.0671 ms
2021-01-08 18:00:59.585 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f8278876 has started in 21.8098 ms
2021-01-08 18:00:59.587 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:477d44a8 has started in 24.6707 ms
2021-01-08 18:00:59.589 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1825a6ea has started in 26.4332 ms
2021-01-08 18:00:59.593 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8453b6c4 has started in 45.8455 ms
2021-01-08 18:00:59.599 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3905f2c0 has started in 36.6416 ms
2021-01-08 18:00:59.599 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:913dc824 has started in 52.1117 ms
2021-01-08 18:00:59.599 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:01739f6d has started in 36.629 ms
2021-01-08 18:00:59.602 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2e35f26b has started in 38.8684 ms
2021-01-08 18:00:59.605 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:628c269c has started in 57.4266 ms
2021-01-08 18:00:59.605 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:80b32f21 has started in 57.4783 ms
2021-01-08 18:00:59.608 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3acf49b4 has started in 45.4482 ms
2021-01-08 18:00:59.610 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ee2f61e7 has started in 63.1084 ms
2021-01-08 18:00:59.613 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c6ea81c8 has started in 50.6706 ms
2021-01-08 18:00:59.616 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b51534de has started in 69.1576 ms
2021-01-08 18:00:59.619 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:13584b97 has started in 72.0107 ms
2021-01-08 18:00:59.621 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4b8b4c47 has started in 73.9484 ms
2021-01-08 18:00:59.625 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e00d8105 has started in 77.0246 ms
2021-01-08 18:00:59.628 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:eea2554b has started in 64.6704 ms
2021-01-08 18:00:59.629 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2d2e118b has started in 82.1956 ms
2021-01-08 18:00:59.633 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:065cfd02 has started in 85.0504 ms
2021-01-08 18:00:59.635 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5e823808 has started in 87.4896 ms
2021-01-08 18:00:59.639 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:66660c1d has started in 74.8816 ms
2021-01-08 18:00:59.641 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a59782e5 has started in 93.1261 ms
2021-01-08 18:00:59.643 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d8f06090 has started in 95.6874 ms
2021-01-08 18:00:59.646 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:6130ee79 has started in 99.2811 ms
2021-01-08 18:00:59.648 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8a0c9870 has started in 85.8534 ms
2021-01-08 18:00:59.653 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:8f59c113 has started in 9.7155 ms
2021-01-08 18:00:59.655 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3afa0a11 has started in 91.9569 ms
2021-01-08 18:00:59.658 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:73af95ec has started in 95.345 ms
2021-01-08 18:00:59.661 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c7a20f66 has started in 98.1743 ms
2021-01-08 18:00:59.663 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:16440:3a86503c all the dispatchers started
2021-01-08 18:00:59.666 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:c01aa3a2 has started in 17.9024 ms
2021-01-08 18:00:59.669 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:239c5b53 has started in 105.9809 ms
2021-01-08 18:00:59.671 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:97836e8e has started in 108.5906 ms
2021-01-08 18:00:59.676 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:39cbe285 has started in 13.1662 ms
2021-01-08 18:00:59.679 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:16440:fa83d283 all the dispatchers started
2021-01-08 18:00:59.682 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:02d66b6e has started in 10.3209 ms
2021-01-08 18:01:00.050 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Now listening on: "http://localhost:6780"
2021-01-08 18:01:00.054 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Application started. Press Ctrl+C to shut down.
2021-01-08 18:01:00.057 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Hosting environment: "Development"
2021-01-08 18:01:00.060 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Content root path: "E:\Source\TopupCard\topup_gate_core\HLS.Paygate.Report.Hosting"
2021-01-08 18:01:29.960 +07:00 [DBG] [Hangfire.Mongo.Migration.MigrationLock.] Acquired lock for migration
2021-01-08 18:01:30.205 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportBalanceConsumer" (using supplied consumer factory)
2021-01-08 18:01:30.224 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportItemConsumer" (using supplied consumer factory)
2021-01-08 18:01:30.226 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.ReportCardStockConsumer" (using supplied consumer factory)
2021-01-08 18:01:30.227 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.CardStockNotificationConsumer" (using supplied consumer factory)
2021-01-08 18:01:30.228 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.BotSendMessageConsumer" (using supplied consumer factory)
2021-01-08 18:01:30.229 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.AuditLogConsumer" (using supplied consumer factory)
2021-01-08 18:01:30.230 +07:00 [DBG] [MassTransit.] Subscribing Consumer: "HLS.Paygate.Report.Interface.Consumers.TransactionReportConsumer" (using supplied consumer factory)
2021-01-08 18:01:30.376 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:01:30.378 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:01:30.380 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:01:30.382 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:01:30.392 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:eeb5ea4b has started in 4.4238 ms
2021-01-08 18:01:30.401 +07:00 [DBG] [MassTransit.] Starting host: rabbitmq://103.109.43.93/paygate
2021-01-08 18:01:30.422 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:1264:27054f94 successfully announced in 20.0925 ms
2021-01-08 18:01:30.426 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:2e5d747b has started in 3.2907 ms
2021-01-08 18:01:30.428 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:1264:27054f94 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:01:30.431 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:401f95cd has started in 3.1855 ms
2021-01-08 18:01:30.433 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:f57a9510 has started in 4.1209 ms
2021-01-08 18:01:30.436 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:3cc393da has started in 3.052 ms
2021-01-08 18:01:30.438 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:b77b66b0 has started in 4.766 ms
2021-01-08 18:01:30.443 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:82395202 has started in 7.148 ms
2021-01-08 18:01:30.445 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2a15aaed has started in 8.7493 ms
2021-01-08 18:01:30.448 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:0c2889b8 has started in 12.5693 ms
2021-01-08 18:01:30.450 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8459077b has started in 14.2328 ms
2021-01-08 18:01:30.453 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ad3d6c51 has started in 17.5791 ms
2021-01-08 18:01:30.454 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:9b3a80fe has started in 17.3468 ms
2021-01-08 18:01:30.457 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8c57737c has started in 21.8376 ms
2021-01-08 18:01:30.459 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f768125a has started in 23.3082 ms
2021-01-08 18:01:30.464 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2c9f4598 has started in 28.2122 ms
2021-01-08 18:01:30.466 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:93f7c202 has started in 30.0251 ms
2021-01-08 18:01:30.467 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:45dc6ec3 has started in 31.207 ms
2021-01-08 18:01:30.470 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a8ae6236 has started in 33.1485 ms
2021-01-08 18:01:30.473 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:61fdf603 has started in 37.1427 ms
2021-01-08 18:01:30.475 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:62336c34 has started in 39.3597 ms
2021-01-08 18:01:30.479 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3f2dcd2e has started in 42.8817 ms
2021-01-08 18:01:30.482 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b85e3378 has started in 46.1269 ms
2021-01-08 18:01:30.485 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:7d76e5f5 has started in 49.078 ms
2021-01-08 18:01:30.488 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d1002e22 has started in 52.5442 ms
2021-01-08 18:01:30.490 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e187c4ac has started in 54.2857 ms
2021-01-08 18:01:30.492 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:cf61cfc2 has started in 56.3768 ms
2021-01-08 18:01:30.495 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:0cd543dc has started in 4.8324 ms
2021-01-08 18:01:30.498 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:19069ce9 has started in 6.0676 ms
2021-01-08 18:01:30.500 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server gunner:1264:27054f94 all the dispatchers started
2021-01-08 18:01:30.513 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:01:30.518 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:01:30.568 +07:00 [DBG] [MassTransit.] Connected: "paygate@103.109.43.93:5672/paygate" (address: "amqp://103.109.43.93:5672", local: 51131)
2021-01-08 18:01:30.596 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-balance, type: fanout, durable"
2021-01-08 18:01:30.596 +07:00 [DBG] [MassTransit.] Declare exchange: "name: bot-send-message, type: fanout, durable"
2021-01-08 18:01:30.602 +07:00 [DBG] [MassTransit.] Declare exchange: "name: transaction-report, type: fanout, durable"
2021-01-08 18:01:30.602 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:SendBotMessage, type: fanout, durable"
2021-01-08 18:01:30.602 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, type: fanout, durable"
2021-01-08 18:01:30.605 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, type: fanout, durable"
2021-01-08 18:01:30.606 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:SendBotMessage, destination: bot-send-message"
2021-01-08 18:01:30.606 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportBalanceHistoriesMessage, destination: report-balance"
2021-01-08 18:01:30.608 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:PayBillSaveMessage, destination: transaction-report"
2021-01-08 18:01:30.608 +07:00 [DBG] [MassTransit.] Declare exchange: "name: audit-log, type: fanout, durable"
2021-01-08 18:01:30.611 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, type: fanout, durable"
2021-01-08 18:01:30.613 +07:00 [DBG] [MassTransit.] Declare queue: "name: transaction-report, durable"
2021-01-08 18:01:30.613 +07:00 [DBG] [MassTransit.] Declare queue: "name: bot-send-message, durable"
2021-01-08 18:01:30.613 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-balance, durable"
2021-01-08 18:01:30.614 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:AccountActivityHistoryMessage, destination: audit-log"
2021-01-08 18:01:30.614 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-item, type: fanout, durable"
2021-01-08 18:01:30.618 +07:00 [DBG] [MassTransit.] Declare queue: "name: audit-log, durable"
2021-01-08 18:01:32.213 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, type: fanout, durable"
2021-01-08 18:01:32.213 +07:00 [DBG] [MassTransit.] Declare exchange: "name: card-stock-notification, type: fanout, durable"
2021-01-08 18:01:32.214 +07:00 [DBG] [MassTransit.] Bind queue: "source: audit-log, destination: audit-log"
2021-01-08 18:01:32.214 +07:00 [DBG] [MassTransit.] Bind queue: "source: transaction-report, destination: transaction-report"
2021-01-08 18:01:32.214 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-balance, destination: report-balance"
2021-01-08 18:01:32.214 +07:00 [DBG] [MassTransit.] Bind queue: "source: bot-send-message, destination: bot-send-message"
2021-01-08 18:01:33.213 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, type: fanout, durable"
2021-01-08 18:01:33.213 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, type: fanout, durable"
2021-01-08 18:01:33.215 +07:00 [DBG] [MassTransit.] Declare exchange: "name: report-card-stock, type: fanout, durable"
2021-01-08 18:01:33.215 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:StockInventoryNotificationEvent, destination: card-stock-notification"
2021-01-08 18:01:33.219 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, type: fanout, durable"
2021-01-08 18:01:33.222 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:01:33.222 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:01:33.222 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:01:33.222 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:01:34.206 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, type: fanout, durable"
2021-01-08 18:01:34.206 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, type: fanout, durable"
2021-01-08 18:01:34.207 +07:00 [DBG] [MassTransit.] Declare queue: "name: card-stock-notification, durable"
2021-01-08 18:01:34.208 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSaleMessage, destination: report-item"
2021-01-08 18:01:34.208 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportCardStockMessage, destination: report-card-stock"
2021-01-08 18:01:34.209 +07:00 [DBG] [MassTransit.] Bind queue: "source: card-stock-notification, destination: card-stock-notification"
2021-01-08 18:01:34.212 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-card-stock, durable"
2021-01-08 18:01:34.213 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:01:34.213 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportSyncAccounMessage, destination: report-item"
2021-01-08 18:01:34.216 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-card-stock, destination: report-card-stock"
2021-01-08 18:01:34.217 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportPayRefMessage, destination: report-item"
2021-01-08 18:01:34.219 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:01:34.220 +07:00 [DBG] [MassTransit.] Bind exchange: "source: HLS.Paygate.Gw.Model.Events:ReportTransStatusMessage, destination: report-item"
2021-01-08 18:01:34.224 +07:00 [DBG] [MassTransit.] Declare queue: "name: report-item, durable"
2021-01-08 18:01:34.225 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/bot-send-message - "amq.ctag-Rkq45txG5vrBJ-HAbvGVxQ"
2021-01-08 18:01:34.225 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/audit-log - "amq.ctag-70iL6JuI9IycI3u8N7N1IA"
2021-01-08 18:01:34.226 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-balance - "amq.ctag-Hsq0OqjGh4rhjACAKZ6QZw"
2021-01-08 18:01:34.226 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/transaction-report - "amq.ctag-M9xbA-Pt8HUpWq0LP5avZA"
2021-01-08 18:01:34.226 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/card-stock-notification - "amq.ctag-zHqAdSpEskRlS6MPnvmBIQ"
2021-01-08 18:01:34.229 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-card-stock - "amq.ctag-scdvazNQcoFyuOlz1_CllQ"
2021-01-08 18:01:34.230 +07:00 [DBG] [MassTransit.] Bind queue: "source: report-item, destination: report-item"
2021-01-08 18:01:34.237 +07:00 [DBG] [MassTransit.] Prefetch Count: 16
2021-01-08 18:01:34.243 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Ok: rabbitmq://103.109.43.93/paygate/report-item - "amq.ctag-tI9wRMjJlSgzDvrtg7V14Q"
2021-01-08 18:01:34.571 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:01:34.573 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:01:34.575 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:01:34.577 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:01:34.580 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:56ce0606 has started in 2.6346 ms
2021-01-08 18:01:34.582 +07:00 [INF] [Hangfire.BackgroundJobServer.] Starting Hangfire Server using job storage: 'Connection string: mongodb://<username>:<password>@10.8.0.5:27017,10.8.0.5:27018,10.8.0.5:27019, database name: Hangfire, prefix: hangfire'
2021-01-08 18:01:34.584 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Mongo DB job storage:
2021-01-08 18:01:34.586 +07:00 [INF] [Hangfire.BackgroundJobServer.]     Prefix: hangfire.
2021-01-08 18:01:34.588 +07:00 [INF] [Hangfire.BackgroundJobServer.] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2021-01-08 18:01:34.590 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:1264:f2705eee successfully announced in 8.0879 ms
2021-01-08 18:01:34.593 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop BackgroundServerProcess:37dcae05 has started in 5.2764 ms
2021-01-08 18:01:34.595 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:67e7fcdf has started in 5.0278 ms
2021-01-08 18:01:34.597 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:1264:f2705eee is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:01:34.600 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:92d6cd66 has started in 3.0957 ms
2021-01-08 18:01:34.602 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:243ac8a8 has started in 5.0667 ms
2021-01-08 18:01:34.604 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:1264:703e93ef successfully announced in 6.6954 ms
2021-01-08 18:01:34.606 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:52f664e6 has started in 8.2745 ms
2021-01-08 18:01:34.610 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:1264:703e93ef is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, MongoExpirationManager, MongoNotificationObserver, Worker, DelayedJobScheduler, RecurringJobScheduler...
2021-01-08 18:01:34.613 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerHeartbeatProcess:2af77478 has started in 7.3069 ms
2021-01-08 18:01:34.613 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:01:34.615 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:de090e2c has started in 12.5794 ms
2021-01-08 18:01:34.618 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ca8d6c39 has started in 8.2789 ms
2021-01-08 18:01:34.621 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerWatchdog:cb048173 has started in 10.708 ms
2021-01-08 18:01:34.623 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop ServerJobCancellationWatcher:e68c16b8 has started in 8.0075 ms
2021-01-08 18:01:34.624 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f25f29b3 has started in 14.6747 ms
2021-01-08 18:01:34.628 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoExpirationManager:bfc4023b has started in 12.7919 ms
2021-01-08 18:01:34.630 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop MongoNotificationObserver:b82aa098 has started in 5.8844 ms
2021-01-08 18:01:34.632 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:17e1d63b has started in 22.281 ms
2021-01-08 18:01:34.633 +07:00 [DBG] [Hangfire.Mongo.MongoExpirationManager.] Removed 0 outdated documents from 'hangfire.jobGraph'.
2021-01-08 18:01:34.635 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5d500ec9 has started in 25.212 ms
2021-01-08 18:01:34.637 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5023515e has started in 27.0714 ms
2021-01-08 18:01:34.640 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:78345fe4 has started in 29.9242 ms
2021-01-08 18:01:34.644 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:42a45097 has started in 34.0664 ms
2021-01-08 18:01:34.646 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3c9662fb has started in 20.1817 ms
2021-01-08 18:01:34.649 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:83da3461 has started in 38.1813 ms
2021-01-08 18:01:34.650 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:fd48791d has started in 24.1209 ms
2021-01-08 18:01:34.654 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:081d93ef has started in 27.584 ms
2021-01-08 18:01:34.656 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8c497377 has started in 30.1666 ms
2021-01-08 18:01:34.658 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2da87ba7 has started in 48.2591 ms
2021-01-08 18:01:34.662 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:59035d1b has started in 52.3271 ms
2021-01-08 18:01:34.664 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1f090785 has started in 38.3963 ms
2021-01-08 18:01:34.667 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b3c71bb6 has started in 40.8667 ms
2021-01-08 18:01:34.669 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e6c7a1c6 has started in 59.1894 ms
2021-01-08 18:01:34.674 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c3ec44de has started in 48.2429 ms
2021-01-08 18:01:34.675 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:37191910 has started in 65.3142 ms
2021-01-08 18:01:34.676 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4df5cb84 has started in 50.5758 ms
2021-01-08 18:01:34.679 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d156a1e9 has started in 52.9466 ms
2021-01-08 18:01:34.681 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3ee223a2 has started in 71.912 ms
2021-01-08 18:01:34.684 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:02926e58 has started in 73.849 ms
2021-01-08 18:01:34.687 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d172fb41 has started in 61.0815 ms
2021-01-08 18:01:34.689 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a284e26f has started in 79.8508 ms
2021-01-08 18:01:34.694 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a612dc8d has started in 67.9094 ms
2021-01-08 18:01:34.697 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5f4b47ff has started in 86.0778 ms
2021-01-08 18:01:34.700 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:efd6cff7 has started in 73.667 ms
2021-01-08 18:01:34.700 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:256712a7 has started in 89.9655 ms
2021-01-08 18:01:34.703 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1c078b6c has started in 93.4466 ms
2021-01-08 18:01:34.706 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b795acd2 has started in 96.2037 ms
2021-01-08 18:01:34.708 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4abb3321 has started in 81.9257 ms
2021-01-08 18:01:34.711 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:81912c46 has started in 85.596 ms
2021-01-08 18:01:34.714 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:6567bd66 has started in 104.6947 ms
2021-01-08 18:01:34.717 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:602b7ee8 has started in 90.6869 ms
2021-01-08 18:01:34.722 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:6ce6c030 has started in 12.6905 ms
2021-01-08 18:01:34.722 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:417df9f2 has started in 95.7884 ms
2021-01-08 18:01:34.724 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:848ff2bf has started in 98.5226 ms
2021-01-08 18:01:34.727 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:72737dec has started in 10.0516 ms
2021-01-08 18:01:34.729 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:1264:f2705eee all the dispatchers started
2021-01-08 18:01:34.733 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bc37e804 has started in 106.7119 ms
2021-01-08 18:01:34.735 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:63e64880 has started in 109.5148 ms
2021-01-08 18:01:34.739 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4f3b7606 has started in 113.1266 ms
2021-01-08 18:01:34.744 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop DelayedJobScheduler:d1bd099b has started in 7.9813 ms
2021-01-08 18:01:34.747 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop RecurringJobScheduler:ba4e5711 has started in 7.5386 ms
2021-01-08 18:01:34.749 +07:00 [INF] [Hangfire.Server.BackgroundServerProcess.] Server report-gunner:1264:703e93ef all the dispatchers started
2021-01-08 18:01:35.049 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Now listening on: "http://localhost:6780"
2021-01-08 18:01:35.052 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Application started. Press Ctrl+C to shut down.
2021-01-08 18:01:35.055 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Hosting environment: "Development"
2021-01-08 18:01:35.058 +07:00 [INF] [Microsoft.Hosting.Lifetime.] Content root path: "E:\Source\TopupCard\topup_gate_core\HLS.Paygate.Report.Hosting"
2021-01-08 18:02:00.465 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server gunner:1264:27054f94 heartbeat successfully sent
2021-01-08 18:02:00.842 +07:00 [DBG] [Hangfire.Server.RecurringJobScheduler.] 1 recurring job(s) processed by scheduler.
2021-01-08 18:02:06.599 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:f2705eee heartbeat successfully sent
2021-01-08 18:02:06.599 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:703e93ef heartbeat successfully sent
2021-01-08 18:02:30.486 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server gunner:1264:27054f94 heartbeat successfully sent
2021-01-08 18:02:36.620 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:703e93ef heartbeat successfully sent
2021-01-08 18:02:36.620 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:f2705eee heartbeat successfully sent
2021-01-08 18:03:00.514 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server gunner:1264:27054f94 heartbeat successfully sent
2021-01-08 18:03:02.854 +07:00 [DBG] [Hangfire.Server.RecurringJobScheduler.] 1 recurring job(s) processed by scheduler.
2021-01-08 18:03:30.964 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:703e93ef heartbeat successfully sent
2021-01-08 18:03:30.965 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:f2705eee heartbeat successfully sent
2021-01-08 18:03:30.965 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server gunner:1264:27054f94 heartbeat successfully sent
2021-01-08 18:04:00.975 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:703e93ef heartbeat successfully sent
2021-01-08 18:04:00.989 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server gunner:1264:27054f94 heartbeat successfully sent
2021-01-08 18:04:00.989 +07:00 [DBG] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:f2705eee heartbeat successfully sent
2021-01-08 18:04:01.195 +07:00 [DBG] [Hangfire.Server.RecurringJobScheduler.] 1 recurring job(s) processed by scheduler.
2021-01-08 18:04:10.396 +07:00 [INF] [HLS.Paygate.Report.Domain.Services.TransactionReportService.] Process query bill:{"FullName":"Nguyen Van A","CustomerReference":"ZTWDGN001","Address":"So 66, ngach 33/88, ... Thanh Xuan","Period":"08/2019","ProductName":"Cấp nước Đồng Nai","ProductCode":"VWA_BILL_DONGNAI"}
2021-01-08 18:04:11.374 +07:00 [DBG] [MassTransit.] Declare exchange: "name: GUNNER_HLSPaygateReportHosting_bus_xeeyyyr3pq4n7qeobdcm8tgygn, type: fanout, auto-delete"
2021-01-08 18:04:11.490 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Commands:BillQueryRequestCommand, type: fanout, durable"
2021-01-08 18:04:11.491 +07:00 [DBG] [MassTransit.] Declare exchange: "name: HLS.Paygate.Gw.Model.Commands:ICommand, type: fanout, durable"
2021-01-08 18:04:30.326 +07:00 [INF] [MassTransit.] Disconnect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.329 +07:00 [INF] [MassTransit.] Disconnected: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.334 +07:00 [DBG] [MassTransit.] Closing model: 1 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.340 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Model Shutdown: rabbitmq://103.109.43.93/paygate/report-balance - "amq.ctag-Hsq0OqjGh4rhjACAKZ6QZw", Concurrent Peak: 0, 541-"Unexpected Exception"
2021-01-08 18:04:30.341 +07:00 [DBG] [MassTransit.ReceiveTransport.] Closing model: 2 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.341 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Model Shutdown: rabbitmq://103.109.43.93/paygate/bot-send-message - "amq.ctag-Rkq45txG5vrBJ-HAbvGVxQ", Concurrent Peak: 0, 541-"Unexpected Exception"
2021-01-08 18:04:30.341 +07:00 [DBG] [MassTransit.ReceiveTransport.] Closing model: 3 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.342 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Model Shutdown: rabbitmq://103.109.43.93/paygate/transaction-report - "amq.ctag-M9xbA-Pt8HUpWq0LP5avZA", Concurrent Peak: 0, 541-"Unexpected Exception"
2021-01-08 18:04:30.342 +07:00 [DBG] [MassTransit.ReceiveTransport.] Closing model: 4 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.343 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Model Shutdown: rabbitmq://103.109.43.93/paygate/audit-log - "amq.ctag-70iL6JuI9IycI3u8N7N1IA", Concurrent Peak: 0, 541-"Unexpected Exception"
2021-01-08 18:04:30.343 +07:00 [DBG] [MassTransit.ReceiveTransport.] Closing model: 5 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.348 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Model Shutdown: rabbitmq://103.109.43.93/paygate/report-item - "amq.ctag-tI9wRMjJlSgzDvrtg7V14Q", Concurrent Peak: 0, 541-"Unexpected Exception"
2021-01-08 18:04:30.348 +07:00 [DBG] [MassTransit.ReceiveTransport.] Closing model: 6 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.348 +07:00 [DBG] [MassTransit.] Consumer completed "amq.ctag-M9xbA-Pt8HUpWq0LP5avZA": 0 received, 0 concurrent
2021-01-08 18:04:30.348 +07:00 [DBG] [MassTransit.] Consumer completed "amq.ctag-tI9wRMjJlSgzDvrtg7V14Q": 0 received, 0 concurrent
2021-01-08 18:04:30.349 +07:00 [DBG] [MassTransit.] Consumer completed "amq.ctag-70iL6JuI9IycI3u8N7N1IA": 0 received, 0 concurrent
2021-01-08 18:04:30.348 +07:00 [DBG] [MassTransit.] Consumer completed "amq.ctag-Rkq45txG5vrBJ-HAbvGVxQ": 0 received, 0 concurrent
2021-01-08 18:04:30.348 +07:00 [DBG] [MassTransit.] Consumer completed "amq.ctag-Hsq0OqjGh4rhjACAKZ6QZw": 0 received, 0 concurrent
2021-01-08 18:04:30.360 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Model Shutdown: rabbitmq://103.109.43.93/paygate/card-stock-notification - "amq.ctag-zHqAdSpEskRlS6MPnvmBIQ", Concurrent Peak: 0, 541-"Unexpected Exception"
2021-01-08 18:04:30.360 +07:00 [DBG] [MassTransit.ReceiveTransport.] Closing model: 7 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.360 +07:00 [DBG] [MassTransit.] Consumer completed "amq.ctag-zHqAdSpEskRlS6MPnvmBIQ": 0 received, 0 concurrent
2021-01-08 18:04:30.364 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.367 +07:00 [DBG] [MassTransit.ReceiveTransport.] Consumer Model Shutdown: rabbitmq://103.109.43.93/paygate/report-card-stock - "amq.ctag-scdvazNQcoFyuOlz1_CllQ", Concurrent Peak: 0, 541-"Unexpected Exception"
2021-01-08 18:04:30.367 +07:00 [DBG] [MassTransit.] Consumer completed "amq.ctag-scdvazNQcoFyuOlz1_CllQ": 0 received, 0 concurrent
2021-01-08 18:04:30.372 +07:00 [DBG] [MassTransit.ReceiveTransport.] Closing model: 8 "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:30.506 +07:00 [ERR] [MassTransit.] Operation interrupted: 
RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
--- End of stack trace from previous location where exception was thrown ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(Stream reader, Byte[] frameHeaderBuffer)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)
   at RabbitMQ.Client.Impl.ModelBase.ModelRpc(MethodBase method, ContentHeaderBase header, Byte[] body)
   at RabbitMQ.Client.Framing.Impl.Model._Private_ExchangeDeclare(String exchange, String type, Boolean passive, Boolean durable, Boolean autoDelete, Boolean internal, Boolean nowait, IDictionary`2 arguments)
   at RabbitMQ.Client.Impl.ModelBase.ExchangeDeclare(String exchange, String type, Boolean durable, Boolean autoDelete, IDictionary`2 arguments)
   at MassTransit.RabbitMqTransport.Contexts.RabbitMqModelContext.<>c__DisplayClass16_0.<MassTransit.RabbitMqTransport.ModelContext.ExchangeDeclare>b__0()
   at MassTransit.Util.ChannelExecutor.<>c__DisplayClass11_0.<Run>g__RunMethod|0()
   at MassTransit.Util.ChannelExecutor.<>c__DisplayClass11_0.<Run>b__1()
   at MassTransit.Util.ChannelExecutor.SynchronousFuture`1.Run()
--- End of stack trace from previous location where exception was thrown ---
   at MassTransit.Util.ChannelExecutor.Run[T](Func`1 method, CancellationToken cancellationToken)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.ConfigureTopology(ModelContext context)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.<>c__DisplayClass3_0.<<GreenPipes-IFilter<MassTransit-RabbitMqTransport-ModelContext>-Send>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at GreenPipes.PipeExtensions.OneTimeSetup[T](PipeContext context, Func`2 setupMethod, PayloadFactory`1 payloadFactory)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.GreenPipes.IFilter<MassTransit.RabbitMqTransport.ModelContext>.Send(ModelContext context, IPipe`1 next)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at MassTransit.RabbitMqTransport.Transport.RabbitMqReceiveTransport.<Receiver>b__12_0()
2021-01-08 18:04:30.507 +07:00 [WRN] [MassTransit.] Retrying 00:00:06.1710000: "Broker unreachable: paygate@103.109.43.93:5672/paygate"
MassTransit.RabbitMqTransport.RabbitMqConnectionException: Broker unreachable: paygate@103.109.43.93:5672/paygate
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10065): A socket operation was attempted to an unreachable host. 103.109.43.93:5672
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(Exception source)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__275_0(IAsyncResult iar)
--- End of stack trace from previous location where exception was thrown ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 hostnames, String clientProvidedName)
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
   --- End of inner exception stack trace ---
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at MassTransit.Policies.PipeRetryExtensions.Retry[T](IRetryPolicy retryPolicy, Func`1 retryMethod, CancellationToken cancellationToken)
2021-01-08 18:04:30.514 +07:00 [ERR] [MassTransit.] RabbitMQ Connect Failed: "paygate@103.109.43.93:5672/paygate"
MassTransit.RabbitMqTransport.RabbitMqConnectionException: Operation interrupted: paygate@103.109.43.93:5672/paygate
 ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
--- End of stack trace from previous location where exception was thrown ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(Stream reader, Byte[] frameHeaderBuffer)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)
   at RabbitMQ.Client.Impl.ModelBase.ModelRpc(MethodBase method, ContentHeaderBase header, Byte[] body)
   at RabbitMQ.Client.Framing.Impl.Model._Private_ExchangeDeclare(String exchange, String type, Boolean passive, Boolean durable, Boolean autoDelete, Boolean internal, Boolean nowait, IDictionary`2 arguments)
   at RabbitMQ.Client.Impl.ModelBase.ExchangeDeclare(String exchange, String type, Boolean durable, Boolean autoDelete, IDictionary`2 arguments)
   at MassTransit.RabbitMqTransport.Contexts.RabbitMqModelContext.<>c__DisplayClass16_0.<MassTransit.RabbitMqTransport.ModelContext.ExchangeDeclare>b__0()
   at MassTransit.Util.ChannelExecutor.<>c__DisplayClass11_0.<Run>g__RunMethod|0()
   at MassTransit.Util.ChannelExecutor.<>c__DisplayClass11_0.<Run>b__1()
   at MassTransit.Util.ChannelExecutor.SynchronousFuture`1.Run()
--- End of stack trace from previous location where exception was thrown ---
   at MassTransit.Util.ChannelExecutor.Run[T](Func`1 method, CancellationToken cancellationToken)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.ConfigureTopology(ModelContext context)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.<>c__DisplayClass3_0.<<GreenPipes-IFilter<MassTransit-RabbitMqTransport-ModelContext>-Send>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at GreenPipes.PipeExtensions.OneTimeSetup[T](PipeContext context, Func`2 setupMethod, PayloadFactory`1 payloadFactory)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.GreenPipes.IFilter<MassTransit.RabbitMqTransport.ModelContext>.Send(ModelContext context, IPipe`1 next)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at MassTransit.RabbitMqTransport.Transport.RabbitMqReceiveTransport.<Receiver>b__12_0()
   --- End of inner exception stack trace ---
2021-01-08 18:04:30.533 +07:00 [WRN] [MassTransit.] Retrying 00:00:05.6270000: "Operation interrupted: paygate@103.109.43.93:5672/paygate"
MassTransit.RabbitMqTransport.RabbitMqConnectionException: Operation interrupted: paygate@103.109.43.93:5672/paygate
 ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
--- End of stack trace from previous location where exception was thrown ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(Stream reader, Byte[] frameHeaderBuffer)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)
   at RabbitMQ.Client.Impl.ModelBase.ModelRpc(MethodBase method, ContentHeaderBase header, Byte[] body)
   at RabbitMQ.Client.Framing.Impl.Model._Private_ExchangeDeclare(String exchange, String type, Boolean passive, Boolean durable, Boolean autoDelete, Boolean internal, Boolean nowait, IDictionary`2 arguments)
   at RabbitMQ.Client.Impl.ModelBase.ExchangeDeclare(String exchange, String type, Boolean durable, Boolean autoDelete, IDictionary`2 arguments)
   at MassTransit.RabbitMqTransport.Contexts.RabbitMqModelContext.<>c__DisplayClass16_0.<MassTransit.RabbitMqTransport.ModelContext.ExchangeDeclare>b__0()
   at MassTransit.Util.ChannelExecutor.<>c__DisplayClass11_0.<Run>g__RunMethod|0()
   at MassTransit.Util.ChannelExecutor.<>c__DisplayClass11_0.<Run>b__1()
   at MassTransit.Util.ChannelExecutor.SynchronousFuture`1.Run()
--- End of stack trace from previous location where exception was thrown ---
   at MassTransit.Util.ChannelExecutor.Run[T](Func`1 method, CancellationToken cancellationToken)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.ConfigureTopology(ModelContext context)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.<>c__DisplayClass3_0.<<GreenPipes-IFilter<MassTransit-RabbitMqTransport-ModelContext>-Send>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at GreenPipes.PipeExtensions.OneTimeSetup[T](PipeContext context, Func`2 setupMethod, PayloadFactory`1 payloadFactory)
   at MassTransit.RabbitMqTransport.Pipeline.ConfigureTopologyFilter`1.GreenPipes.IFilter<MassTransit.RabbitMqTransport.ModelContext>.Send(ModelContext context, IPipe`1 next)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at GreenPipes.Agents.PipeContextSupervisor`1.GreenPipes.IPipeContextSource<TContext>.Send(IPipe`1 pipe, CancellationToken cancellationToken)
   at MassTransit.RabbitMqTransport.Transport.RabbitMqReceiveTransport.<Receiver>b__12_0()
   --- End of inner exception stack trace ---
   at MassTransit.RabbitMqTransport.Transport.RabbitMqReceiveTransport.<Receiver>b__12_0()
   at MassTransit.Policies.PipeRetryExtensions.Retry(IRetryPolicy retryPolicy, Func`1 retryMethod, CancellationToken cancellationToken)
2021-01-08 18:04:36.694 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:36.703 +07:00 [WRN] [MassTransit.] Retrying 00:00:09.6880000: "Broker unreachable: paygate@103.109.43.93:5672/paygate"
MassTransit.RabbitMqTransport.RabbitMqConnectionException: Broker unreachable: paygate@103.109.43.93:5672/paygate
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10065): A socket operation was attempted to an unreachable host. 103.109.43.93:5672
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(Exception source)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__275_0(IAsyncResult iar)
--- End of stack trace from previous location where exception was thrown ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 hostnames, String clientProvidedName)
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
   --- End of inner exception stack trace ---
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at MassTransit.Policies.PipeRetryExtensions.Retry[T](IRetryPolicy retryPolicy, Func`1 retryMethod, CancellationToken cancellationToken)
2021-01-08 18:04:40.888 +07:00 [ERR] [Hangfire.Mongo.DistributedLock.MongoDistributedLock.] Hangfire:locks:schedulepoller - Unable to clean up locks on the resource. Details:
MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. 10.8.0.5:27019
   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.Connect(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.PooledConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.AcquiredConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.Server.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ServerChannelSource.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ChannelSourceHandle.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Initialize(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Create(IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass39_0.<DeleteOne>b__0(IEnumerable`1 requests)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, Func`2 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, CancellationToken cancellationToken)
   at Hangfire.Mongo.DistributedLock.MongoDistributedLock.Cleanup()
2021-01-08 18:04:40.910 +07:00 [ERR] [Hangfire.Mongo.DistributedLock.MongoDistributedLock.] Hangfire:locks:schedulepoller - Unable to clean up locks on the resource. Details:
MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. 10.8.0.5:27019
   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.Connect(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.PooledConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.AcquiredConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.Server.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ServerChannelSource.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ChannelSourceHandle.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Initialize(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Create(IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass39_0.<DeleteOne>b__0(IEnumerable`1 requests)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, Func`2 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, CancellationToken cancellationToken)
   at Hangfire.Mongo.DistributedLock.MongoDistributedLock.Cleanup()
2021-01-08 18:04:46.412 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:04:46.420 +07:00 [WRN] [MassTransit.] Retrying 00:00:16.3800000: "Broker unreachable: paygate@103.109.43.93:5672/paygate"
MassTransit.RabbitMqTransport.RabbitMqConnectionException: Broker unreachable: paygate@103.109.43.93:5672/paygate
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10065): A socket operation was attempted to an unreachable host. 103.109.43.93:5672
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(Exception source)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__275_0(IAsyncResult iar)
--- End of stack trace from previous location where exception was thrown ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 hostnames, String clientProvidedName)
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
   --- End of inner exception stack trace ---
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at MassTransit.Policies.PipeRetryExtensions.Retry[T](IRetryPolicy retryPolicy, Func`1 retryMethod, CancellationToken cancellationToken)
2021-01-08 18:04:52.065 +07:00 [WRN] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:703e93ef encountered an exception while sending heartbeat
MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. 10.8.0.5:27019
   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.Connect(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.PooledConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.AcquiredConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.Server.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ServerChannelSource.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ChannelSourceHandle.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Initialize(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Create(IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass96_0.<UpdateMany>b__0(IEnumerable`1 requests, BulkWriteOptions bulkWriteOptions)
   at MongoDB.Driver.MongoCollectionBase`1.UpdateMany(FilterDefinition`1 filter, UpdateDefinition`1 update, UpdateOptions options, Func`3 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.UpdateMany(FilterDefinition`1 filter, UpdateDefinition`1 update, UpdateOptions options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.Heartbeat(String serverId)
   at Hangfire.Server.ServerHeartbeatProcess.Execute(BackgroundProcessContext context)
2021-01-08 18:04:52.071 +07:00 [WRN] [Hangfire.Server.ServerHeartbeatProcess.] Server report-gunner:1264:f2705eee encountered an exception while sending heartbeat
MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. 10.8.0.5:27019
   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.Connect(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.PooledConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.AcquiredConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.Server.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ServerChannelSource.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ChannelSourceHandle.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Initialize(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Create(IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass96_0.<UpdateMany>b__0(IEnumerable`1 requests, BulkWriteOptions bulkWriteOptions)
   at MongoDB.Driver.MongoCollectionBase`1.UpdateMany(FilterDefinition`1 filter, UpdateDefinition`1 update, UpdateOptions options, Func`3 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.UpdateMany(FilterDefinition`1 filter, UpdateDefinition`1 update, UpdateOptions options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.Heartbeat(String serverId)
   at Hangfire.Server.ServerHeartbeatProcess.Execute(BackgroundProcessContext context)
2021-01-08 18:04:52.074 +07:00 [WRN] [Hangfire.Server.ServerHeartbeatProcess.] Server gunner:1264:27054f94 encountered an exception while sending heartbeat
MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. 10.8.0.5:27019
   at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.Connect(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.PooledConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool.AcquiredConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.Server.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ServerChannelSource.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Bindings.ChannelSourceHandle.GetChannel(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Initialize(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteContext.Create(IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass96_0.<UpdateMany>b__0(IEnumerable`1 requests, BulkWriteOptions bulkWriteOptions)
   at MongoDB.Driver.MongoCollectionBase`1.UpdateMany(FilterDefinition`1 filter, UpdateDefinition`1 update, UpdateOptions options, Func`3 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.UpdateMany(FilterDefinition`1 filter, UpdateDefinition`1 update, UpdateOptions options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.Heartbeat(String serverId)
   at Hangfire.Server.ServerHeartbeatProcess.Execute(BackgroundProcessContext context)
2021-01-08 18:04:56.185 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution Worker is in the Faulted state now due to an exception, execution will be retried no more than in 00:00:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.190 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8459077b caught an exception and will be retried in 00:00:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.191 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8c57737c caught an exception and will be retried in 00:00:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.193 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8459077b will be retried in 00:00:01...
2021-01-08 18:04:56.199 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:9b3a80fe caught an exception and will be retried in 00:01:21
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.201 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:82395202 caught an exception and will be retried in 00:02:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.200 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2a15aaed caught an exception and will be retried in 00:01:04
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.203 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:82395202 will be retried in 00:02:01...
2021-01-08 18:04:56.200 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:0c2889b8 caught an exception and will be retried in 00:01:40
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.202 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:9b3a80fe will be retried in 00:01:21...
2021-01-08 18:04:56.204 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:0c2889b8 will be retried in 00:01:40...
2021-01-08 18:04:56.190 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f768125a caught an exception and will be retried in 00:00:04
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.190 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2c9f4598 caught an exception and will be retried in 00:00:09
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.193 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:93f7c202 caught an exception and will be retried in 00:00:25
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.197 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a8ae6236 caught an exception and will be retried in 00:00:36
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.201 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:61fdf603 caught an exception and will be retried in 00:03:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.202 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:62336c34 caught an exception and will be retried in 00:03:45
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.202 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3f2dcd2e caught an exception and will be retried in 00:04:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.203 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b85e3378 caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.203 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:7d76e5f5 caught an exception and will be retried in 00:04:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.197 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d1002e22 caught an exception and will be retried in 00:00:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.201 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e187c4ac caught an exception and will be retried in 00:02:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e187c4ac will be retried in 00:02:49...
2021-01-08 18:04:56.186 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution Worker is in the Faulted state now due to an exception, execution will be retried no more than in 00:00:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.186 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution Worker is in the Faulted state now due to an exception, execution will be retried no more than in 00:00:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:42a45097 caught an exception and will be retried in 00:01:04
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b795acd2 caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.203 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ad3d6c51 caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.207 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ad3d6c51 will be retried in 00:05:00...
2021-01-08 18:04:56.200 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:8c57737c will be retried in 00:00:16...
2021-01-08 18:04:56.204 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f768125a will be retried in 00:00:04...
2021-01-08 18:04:56.204 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2c9f4598 will be retried in 00:00:09...
2021-01-08 18:04:56.204 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:93f7c202 will be retried in 00:00:25...
2021-01-08 18:04:56.204 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a8ae6236 will be retried in 00:00:36...
2021-01-08 18:04:56.205 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:61fdf603 will be retried in 00:03:16...
2021-01-08 18:04:56.205 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:62336c34 will be retried in 00:03:45...
2021-01-08 18:04:56.205 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3f2dcd2e will be retried in 00:04:16...
2021-01-08 18:04:56.205 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b85e3378 will be retried in 00:05:00...
2021-01-08 18:04:56.205 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:7d76e5f5 will be retried in 00:04:49...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d1002e22 will be retried in 00:00:49...
2021-01-08 18:04:56.201 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:cf61cfc2 caught an exception and will be retried in 00:02:24
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.208 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:cf61cfc2 will be retried in 00:02:24...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ca8d6c39 caught an exception and will be retried in 00:00:04
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f25f29b3 caught an exception and will be retried in 00:00:09
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5d500ec9 caught an exception and will be retried in 00:00:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.209 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5d500ec9 will be retried in 00:00:16...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5023515e caught an exception and will be retried in 00:00:36
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.209 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5023515e will be retried in 00:00:36...
2021-01-08 18:04:56.203 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2a15aaed will be retried in 00:01:04...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:83da3461 caught an exception and will be retried in 00:01:21
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:848ff2bf caught an exception and will be retried in 00:00:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2da87ba7 caught an exception and will be retried in 00:01:40
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.210 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:2da87ba7 will be retried in 00:01:40...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3c9662fb caught an exception and will be retried in 00:00:09
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:59035d1b caught an exception and will be retried in 00:02:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.210 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:59035d1b will be retried in 00:02:01...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b3c71bb6 caught an exception and will be retried in 00:00:25
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1f090785 caught an exception and will be retried in 00:00:36
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c3ec44de caught an exception and will be retried in 00:00:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:37191910 caught an exception and will be retried in 00:02:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.211 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:37191910 will be retried in 00:02:49...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3ee223a2 caught an exception and will be retried in 00:03:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.211 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3ee223a2 will be retried in 00:03:16...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d156a1e9 caught an exception and will be retried in 00:01:21
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:02926e58 caught an exception and will be retried in 00:03:45
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.212 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:02926e58 will be retried in 00:03:45...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:256712a7 caught an exception and will be retried in 00:04:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5f4b47ff caught an exception and will be retried in 00:04:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.212 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:5f4b47ff will be retried in 00:04:49...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1c078b6c caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4abb3321 caught an exception and will be retried in 00:02:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:efd6cff7 caught an exception and will be retried in 00:02:24
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.213 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:efd6cff7 will be retried in 00:02:24...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:6567bd66 caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.213 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:6567bd66 will be retried in 00:05:00...
2021-01-08 18:04:56.207 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:42a45097 will be retried in 00:01:04...
2021-01-08 18:04:56.207 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:417df9f2 caught an exception and will be retried in 00:04:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.207 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bc37e804 caught an exception and will be retried in 00:04:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.207 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:63e64880 caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.207 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4f3b7606 caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.207 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b795acd2 will be retried in 00:05:00...
2021-01-08 18:04:56.204 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:45dc6ec3 caught an exception and will be retried in 00:05:00
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.215 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:45dc6ec3 will be retried in 00:05:00...
2021-01-08 18:04:56.208 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:ca8d6c39 will be retried in 00:00:04...
2021-01-08 18:04:56.208 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:f25f29b3 will be retried in 00:00:09...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:17e1d63b caught an exception and will be retried in 00:00:25
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:78345fe4 caught an exception and will be retried in 00:00:49
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.209 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:83da3461 will be retried in 00:01:21...
2021-01-08 18:04:56.209 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:848ff2bf will be retried in 00:00:01...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:fd48791d caught an exception and will be retried in 00:00:04
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.210 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:3c9662fb will be retried in 00:00:09...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:081d93ef caught an exception and will be retried in 00:00:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.216 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:081d93ef will be retried in 00:00:16...
2021-01-08 18:04:56.211 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1f090785 will be retried in 00:00:36...
2021-01-08 18:04:56.211 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:c3ec44de will be retried in 00:00:49...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e6c7a1c6 caught an exception and will be retried in 00:02:24
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.216 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:e6c7a1c6 will be retried in 00:02:24...
2021-01-08 18:04:56.212 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d156a1e9 will be retried in 00:01:21...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d172fb41 caught an exception and will be retried in 00:01:40
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.217 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:d172fb41 will be retried in 00:01:40...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a612dc8d caught an exception and will be retried in 00:02:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.217 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a612dc8d will be retried in 00:02:01...
2021-01-08 18:04:56.213 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4abb3321 will be retried in 00:02:49...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:81912c46 caught an exception and will be retried in 00:03:16
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.217 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:81912c46 will be retried in 00:03:16...
2021-01-08 18:04:56.214 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:417df9f2 will be retried in 00:04:16...
2021-01-08 18:04:56.214 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:bc37e804 will be retried in 00:04:49...
2021-01-08 18:04:56.214 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:63e64880 will be retried in 00:05:00...
2021-01-08 18:04:56.214 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4f3b7606 will be retried in 00:05:00...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a284e26f caught an exception and will be retried in 00:00:01
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.215 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:17e1d63b will be retried in 00:00:25...
2021-01-08 18:04:56.215 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:78345fe4 will be retried in 00:00:49...
2021-01-08 18:04:56.216 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:fd48791d will be retried in 00:00:04...
2021-01-08 18:04:56.210 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:b3c71bb6 will be retried in 00:00:25...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4df5cb84 caught an exception and will be retried in 00:01:04
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.212 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:256712a7 will be retried in 00:04:16...
2021-01-08 18:04:56.213 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:1c078b6c will be retried in 00:05:00...
2021-01-08 18:04:56.206 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:602b7ee8 caught an exception and will be retried in 00:03:45
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, IWriteBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](IClientSessionHandle session, FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass57_0`1.<FindOneAndUpdate>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at MongoDB.Driver.FilteredMongoCollectionBase`1.FindOneAndUpdate[TProjection](FilterDefinition`1 filter, UpdateDefinition`1 update, FindOneAndUpdateOptions`2 options, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryGetEnqueuedJob(String queue, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.TryAllQueues(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoJobFetcher.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Mongo.MongoConnection.FetchNextJob(String[] queues, CancellationToken cancellationToken)
   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)
   at Hangfire.Server.BackgroundProcessDispatcherBuilder.ExecuteProcess(Guid executionId, Object state)
   at Hangfire.Processing.BackgroundExecution.Run(Action`2 callback, Object state)
2021-01-08 18:04:56.218 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:a284e26f will be retried in 00:00:01...
2021-01-08 18:04:56.218 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:4df5cb84 will be retried in 00:01:04...
2021-01-08 18:04:56.219 +07:00 [DBG] [Hangfire.Processing.BackgroundExecution.] Execution loop Worker:602b7ee8 will be retried in 00:03:45...
2021-01-08 18:04:56.277 +07:00 [ERR] [Hangfire.Mongo.DistributedLock.MongoDistributedLock.] Hangfire:recurring-jobs:lock - Unable to clean up locks on the resource. Details:
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatches(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.Execute(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass39_0.<DeleteOne>b__0(IEnumerable`1 requests)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, Func`2 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, CancellationToken cancellationToken)
   at Hangfire.Mongo.DistributedLock.MongoDistributedLock.Cleanup()
2021-01-08 18:04:59.689 +07:00 [ERR] [Hangfire.Mongo.DistributedLock.MongoDistributedLock.] Hangfire:recurring-jobs:lock - Unable to clean up locks on the resource. Details:
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatches(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.Execute(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass39_0.<DeleteOne>b__0(IEnumerable`1 requests)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, Func`2 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, CancellationToken cancellationToken)
   at Hangfire.Mongo.DistributedLock.MongoDistributedLock.Cleanup()
2021-01-08 18:04:59.713 +07:00 [ERR] [Hangfire.Mongo.DistributedLock.MongoDistributedLock.] Hangfire:locks:schedulepoller - Unable to clean up locks on the resource. Details:
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatches(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.Execute(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass39_0.<DeleteOne>b__0(IEnumerable`1 requests)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, Func`2 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, CancellationToken cancellationToken)
   at Hangfire.Mongo.DistributedLock.MongoDistributedLock.Cleanup()
2021-01-08 18:04:59.728 +07:00 [ERR] [Hangfire.Mongo.DistributedLock.MongoDistributedLock.] Hangfire:recurring-jobs:lock - Unable to clean up locks on the resource. Details:
MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.
 ---> System.IO.IOException: Unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
 ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   at MongoDB.Driver.Core.Misc.StreamExtensionMethods.ReadBytes(Stream stream, Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Operations.RetryableWriteOperationExecutor.Execute[TResult](IRetryableWriteOperation`1 operation, RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.ExecuteBatches(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1.Execute(RetryableWriteContext context, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.ExecuteBatch(RetryableWriteContext context, Batch batch, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(IWriteBinding binding, CancellationToken cancellationToken)
   at MongoDB.Driver.OperationExecutor.ExecuteWriteOperation[TResult](IWriteBinding binding, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.ExecuteWriteOperation[TResult](IClientSessionHandle session, IWriteOperation`1 operation, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IClientSessionHandle session, IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.<>c__DisplayClass27_0.<BulkWrite>b__0(IClientSessionHandle session)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSession[TResult](Func`2 func, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass39_0.<DeleteOne>b__0(IEnumerable`1 requests)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, Func`2 bulkWrite)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, DeleteOptions options, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionBase`1.DeleteOne(FilterDefinition`1 filter, CancellationToken cancellationToken)
   at Hangfire.Mongo.DistributedLock.MongoDistributedLock.Cleanup()
2021-01-08 18:05:02.821 +07:00 [INF] [MassTransit.] Connect: "paygate@103.109.43.93:5672/paygate"
2021-01-08 18:05:02.829 +07:00 [WRN] [MassTransit.] Retrying 00:00:25.6000000: "Broker unreachable: paygate@103.109.43.93:5672/paygate"
MassTransit.RabbitMqTransport.RabbitMqConnectionException: Broker unreachable: paygate@103.109.43.93:5672/paygate
 ---> RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (10065): A socket operation was attempted to an unreachable host. 103.109.43.93:5672
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(Exception source)
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__275_0(IAsyncResult iar)
--- End of stack trace from previous location where exception was thrown ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IList`1 hostnames, String clientProvidedName)
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
   --- End of inner exception stack trace ---
   at MassTransit.RabbitMqTransport.Integration.ConnectionContextFactory.<>c__DisplayClass6_0.<<CreateConnection>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at MassTransit.Policies.PipeRetryExtensions.Retry[T](IRetryPolicy retryPolicy, Func`1 retryMethod, CancellationToken cancellationToken)
